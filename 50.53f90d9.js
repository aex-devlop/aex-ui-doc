(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{137:function(t,e,n){"use strict";n.r(e);var a=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,a=arguments[e];for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t},a={name:"component-doc",components:{"aex-demo0":a({render:function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("div",[[t("aex-radio-group",{staticStyle:{marginBottom:"10px"},attrs:{size:"small"},model:{value:e.tableSize,callback:function(t){e.tableSize=t},expression:"tableSize"}},[t("aex-radio-button",{attrs:{label:""}},[e._v("默认")]),e._v(" "),t("aex-radio-button",{attrs:{label:"medium"}},[e._v("medium")]),e._v(" "),t("aex-radio-button",{attrs:{label:"small"}},[e._v("small")]),e._v(" "),t("aex-radio-button",{attrs:{label:"mini"}},[e._v("mini")])],1),e._v(" "),t("aex-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData,size:e.tableSize}},[t("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"type",label:"类型",width:"120","show-overflow-tooltip":""}}),e._v(" "),t("aex-table-column",{attrs:{prop:"num",label:"数量",align:"center"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"status",label:"状态",align:"right"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableSize:"",tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售OTC交易-出售OTC交易-出售OTC交易-出售",num:"+14.93856200",status:"已完成"}]}}}),"aex-demo1":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-text",{attrs:{title:"h4"}},[t._v("默认空数据")]),t._v(" "),e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态"}})],1),t._v(" "),e("aex-text",{staticStyle:{marginTop:"20px"},attrs:{title:"h4"}},[t._v("刷新按钮")]),t._v(" "),e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,emptyButtonText:"刷新"},on:{emptyEvent:t.reLoad}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态"}})],1),t._v(" "),e("aex-text",{staticStyle:{marginTop:"20px"},attrs:{title:"h4"}},[t._v("自定义空数据")]),t._v(" "),e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态"}}),t._v(" "),e("div",{attrs:{slot:"empty"},slot:"empty"},[t._v("这里自定义空数据～～～")])],1),t._v(" "),e("aex-text",{staticStyle:{marginTop:"20px"},attrs:{title:"h4"}},[t._v("加载中")]),t._v(" "),e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,emptyButtonText:"刷新",loading:""},on:{emptyEvent:t.reLoad}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[]}},methods:{reLoad:function(){this.$message("真的没有数据了！！！")}}}),"aex-demo2":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:""}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"}]}}}),"aex-demo3":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,stripe:""}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"}]}}}),"aex-demo4":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"row-class-name":t.tableRowClassName}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}})],1)]],2)},staticRenderFns:[]},{methods:{tableRowClassName:function(t){t.row;t=t.rowIndex;return 1===t?"warn":2===t?"success":""}},data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"}]}}}),"aex-demo5":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,height:"200"}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售"}]}}}),"aex-demo6":a({render:function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("div",[[a("aex-table",{staticStyle:{width:"800px"},attrs:{data:n.tableData,border:""}},[a("aex-table-column",{attrs:{fixed:"",prop:"date",label:"日期",width:"200"}}),n._v(" "),a("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200"}}),n._v(" "),a("aex-table-column",{attrs:{prop:"type",label:"类型",width:"200"}}),n._v(" "),a("aex-table-column",{attrs:{prop:"num",label:"数量",width:"200"}}),n._v(" "),a("aex-table-column",{attrs:{prop:"status",label:"状态",width:"200"}}),n._v(" "),a("aex-table-column",{attrs:{fixed:"right",label:"操作",width:"160"},scopedSlots:n._u([{key:"default",fn:function(e){return[a("aex-button",{attrs:{type:"text",size:"mini"},on:{click:function(t){n.handleClick(e.row)}}},[n._v("详情")]),n._v(" "),a("aex-button",{attrs:{type:"text",size:"mini"}},[n._v("编辑")])]}}])})],1)]],2)},staticRenderFns:[]},{methods:{handleClick:function(t){console.log(t)}},data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"}]}}}),"aex-demo7":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:""}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"200"}}),t._v(" "),e("aex-table-column",{attrs:{label:"币种信息"}},[e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}})],1),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"}]}}}),"aex-demo8":a({render:function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("div",[[t("aex-table",{ref:"singleTable",staticStyle:{width:"100%"},attrs:{data:e.tableData,"highlight-current-row":""},on:{"current-change":e.handleCurrentChange}},[t("aex-table-column",{attrs:{type:"index",label:"序号",width:"50"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"date",label:"日期",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"type",label:"类型",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"num",label:"数量",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"status",label:"状态",width:"200"}})],1),e._v(" "),t("div",{staticStyle:{"margin-top":"20px"}},[t("aex-button",{attrs:{type:"outline"},on:{click:function(t){e.setCurrent(e.tableData[1])}}},[e._v("选中第二行")]),e._v(" "),t("aex-button",{attrs:{type:"outline"},on:{click:function(t){e.setCurrent()}}},[e._v("取消选择")])],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"}],currentRow:null}},methods:{setCurrent:function(t){this.$refs.singleTable.setCurrentRow(t)},handleCurrentChange:function(t){this.currentRow=t}}}),"aex-demo9":a({render:function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("div",[[t("aex-table",{ref:"multipleTable",staticStyle:{width:"100%"},attrs:{data:e.tableData},on:{"selection-change":e.handleSelectionChange}},[t("aex-table-column",{attrs:{type:"selection",width:"55"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"date",label:"日期",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"type",label:"类型",width:"200"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"num",label:"数量"}}),e._v(" "),t("aex-table-column",{attrs:{prop:"status",label:"状态"}})],1),e._v(" "),t("div",{staticStyle:{"margin-top":"20px"}},[t("aex-button",{attrs:{width:"200px"},on:{click:function(t){e.toggleSelection([e.tableData[1],e.tableData[2]])}}},[e._v("切换第二、第三行的选中状态")]),e._v(" "),t("aex-button",{on:{click:function(t){e.toggleSelection()}}},[e._v("取消选择")])],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"},{date:"2016-05-02",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:"已完成"}],multipleSelection:[]}},methods:{toggleSelection:function(t){var e=this;t?t.forEach(function(t){e.$refs.multipleTable.toggleRowSelection(t)}):this.$refs.multipleTable.clearSelection()},handleSelectionChange:function(t){this.multipleSelection=t}}}),"aex-demo10":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"default-sort":{prop:"date",order:"descending"}}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"200",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型",width:"200",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态",formatter:t.formatter}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{date:"2016-05-02",coin:"BTC",type:"OTC交易-出售",num:"+18.93856200",status:0},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}]}},methods:{formatter:function(t,e){return 1==t.status?"已完成":"待处理"}}}),"aex-demo11":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-button",{on:{click:t.resetDateFilter}},[t._v("清除日期过滤器")]),t._v(" "),e("aex-button",{on:{click:t.clearFilter}},[t._v("清除所有过滤器")]),t._v(" "),e("aex-table",{ref:"filterTable",staticStyle:{width:"100%"},attrs:{data:t.tableData}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"200",sortable:"","column-key":"date",filters:[{text:"2016-05-01",value:"2016-05-01"},{text:"2016-05-02",value:"2016-05-02"},{text:"2016-05-03",value:"2016-05-03"}],"filter-method":t.filterHandler}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"200",sortable:"",filters:[{text:"GAT",value:"GAT"},{text:"BTC",value:"BTC"}],"filter-method":t.filterCoin,"filter-placement":"bottom-end"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型",width:"200",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量",sortable:""}}),t._v(" "),e("aex-table-column",{attrs:{prop:"status",label:"状态",formatter:t.formatter}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{date:"2016-05-02",coin:"BTC",type:"OTC交易-出售",num:"+18.93856200",status:0},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}]}},methods:{resetDateFilter:function(){this.$refs.filterTable.clearFilter("date")},clearFilter:function(){this.$refs.filterTable.clearFilter()},formatter:function(t,e){return t.address},filterCoin:function(t,e){return e.coin===t},filterHandler:function(t,e,n){return e[n.property]===t}}}),"aex-demo12":a({render:function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("div",[[a("aex-table",{staticStyle:{width:"100%"},attrs:{data:n.tableData}},[a("aex-table-column",{attrs:{label:"日期",width:"180"},scopedSlots:n._u([{key:"default",fn:function(t){return[a("i",{staticClass:"aex-icon-time"}),n._v(" "),a("span",{staticStyle:{"margin-left":"10px"}},[n._v(n._s(t.row.date))])]}}])}),n._v(" "),a("aex-table-column",{attrs:{label:"币名",width:"180"},scopedSlots:n._u([{key:"default",fn:function(t){return[a("aex-popover",{attrs:{trigger:"hover",placement:"left"}},[a("aex-text",{attrs:{title:"h3"}},[n._v("币名: "+n._s(t.row.coin))]),n._v(" "),a("aex-text",[n._v("类型: "+n._s(t.row.type))]),n._v(" "),a("aex-text",[n._v("数量: "+n._s(t.row.num))]),n._v(" "),a("aex-tag",{attrs:{slot:"reference",size:"medium"},slot:"reference"},[n._v(n._s(t.row.coin))])],1)]}}])}),n._v(" "),a("aex-table-column",{attrs:{label:"操作"},scopedSlots:n._u([{key:"default",fn:function(e){return[a("aex-button",{attrs:{size:"mini",type:"outline"},on:{click:function(t){n.handleEdit(e.$index,e.row)}}},[n._v("编辑")]),n._v(" "),a("aex-button",{attrs:{size:"mini",type:"danger"},on:{click:function(t){n.handleDelete(e.$index,e.row)}}},[n._v("删除")])]}}])})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{date:"2016-05-02",coin:"BTC",type:"OTC交易-出售",num:"+18.93856200",status:0},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}]}},methods:{handleEdit:function(t,e){console.log(t,e)},handleDelete:function(t,e){console.log(t,e)}}}),"aex-demo13":a({render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[[n("aex-table",{staticStyle:{width:"100%"},attrs:{data:e.tableData}},[n("aex-table-column",{attrs:{type:"expand"},scopedSlots:e._u([{key:"default",fn:function(t){return[n("aex-form",{attrs:{"label-position":"left",inline:""}},[n("aex-form-item",{attrs:{label:"日期"}},[n("span",[e._v(e._s(t.row.date))])]),e._v(" "),n("aex-form-item",{attrs:{label:"类型"}},[n("span",[e._v(e._s(t.row.type))])])],1)]}}])}),e._v(" "),n("aex-table-column",{attrs:{label:"币种",prop:"coin"}}),e._v(" "),n("aex-table-column",{attrs:{label:"数量",prop:"num"}}),e._v(" "),n("aex-table-column",{attrs:{label:"状态",prop:"status",formatter:e.formatter}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{date:"2016-05-02",coin:"BTC",type:"OTC交易-出售",num:"+18.93856200",status:0},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}]}},methods:{formatter:function(t,e){return 1==t.status?"已完成":"待处理"}}}),"aex-demo14":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("div",[e("aex-table",{staticStyle:{width:"100%","margin-bottom":"20px"},attrs:{data:t.tableData,"row-key":"id",border:"","default-expand-all":"","tree-props":{children:"children",hasChildren:"hasChildren"}}},[e("aex-table-column",{attrs:{prop:"date",label:"日期",sortable:"",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",sortable:"",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型",sortable:"",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}})],1),t._v(" "),e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData1,"row-key":"id",border:"",lazy:"",load:t.load,"tree-props":{children:"children",hasChildren:"hasChildren"}}},[e("aex-table-column",{attrs:{prop:"date",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"姓名",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}})],1)],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{id:1,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{id:2,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{id:3,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1,children:[{id:31,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{id:32,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1}]}],tableData1:[{id:1,date:"2016-05-01",coin:"GAT",type:"OTC交易-出售",num:"+14.93856200",status:1},{id:2,date:"2016-05-02",coin:"BTC",type:"OTC交易-出售",num:"+18.93856200",status:0,hasChildren:!0},{id:3,date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}]}},methods:{load:function(t,e,n){setTimeout(function(){n([{id:21,date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1},{id:22,date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}])},1e3)}}}),"aex-demo15":a({render:function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("div",[[a("aex-table",{staticStyle:{width:"100%"},attrs:{data:n.tableData.filter(function(t){return!n.search||t.name.toLowerCase().includes(n.search.toLowerCase())})}},[a("aex-table-column",{attrs:{label:"日期",prop:"date"}}),n._v(" "),a("aex-table-column",{attrs:{label:"币种",prop:"coin"}}),n._v(" "),a("aex-table-column",{attrs:{prop:"type"},scopedSlots:n._u([{key:"header",fn:function(t){return[a("aex-tooltip",{attrs:{content:"这里就提示一下"}},[a("span",[n._v("类型 "),a("i",{staticClass:"aex-icon-question-circle"})])])]}}])}),n._v(" "),a("aex-table-column",{attrs:{align:"right"},scopedSlots:n._u([{key:"header",fn:function(t){return[a("aex-input",{attrs:{size:"mini",placeholder:"输入搜索"},model:{value:n.search,callback:function(t){n.search=t},expression:"search"}})]}},{key:"default",fn:function(e){return[a("aex-button",{attrs:{size:"mini"},on:{click:function(t){n.handleEdit(e.$index,e.row)}}},[n._v("详情")]),n._v(" "),a("aex-button",{attrs:{size:"mini",type:"danger"},on:{click:function(t){n.handleDelete(e.$index,e.row)}}},[n._v("删除")])]}}])})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"+12.93856200",status:1}],search:""}},methods:{handleEdit:function(t,e){console.log(t,e)},handleDelete:function(t,e){console.log(t,e)}}}),"aex-demo16":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,border:"","show-summary":""}},[e("aex-table-column",{attrs:{prop:"date",label:"日期"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",sortable:"",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",sortable:"",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",sortable:"",label:"数量"}})],1),t._v(" "),e("aex-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,border:"",height:"200","summary-method":t.getSummaries,"show-summary":""}},[e("aex-table-column",{attrs:{prop:"date",label:"日期"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"num"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1}]}},methods:{getSummaries:function(t){var e=t.columns,a=t.data,l=[];return e.forEach(function(e,t){var n;0!==t?(n=a.map(function(t){return Number(t[e.property])})).every(function(t){return isNaN(t)})?l[t]="":(l[t]=n.reduce(function(t,e){var n=Number(e);return isNaN(n)?t:t+e},0),l[t]+=" 元"):l[t]="总价"}),l}}}),"aex-demo17":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("div",[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData,"span-method":t.arraySpanMethod,border:""}},[e("aex-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount1",sortable:"",label:"A"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount2",sortable:"",label:"B"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount3",sortable:"",label:"C"}})],1),t._v(" "),e("aex-table",{staticStyle:{width:"100%","margin-top":"20px"},attrs:{data:t.tableData,"span-method":t.objectSpanMethod,border:""}},[e("aex-table-column",{attrs:{prop:"id",label:"ID",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount1",label:"A"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount2",label:"B"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"amount3",label:"C"}})],1)],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{id:"12987122",amount1:"234",amount2:"3.2",amount3:10},{id:"12987123",amount1:"165",amount2:"4.43",amount3:12},{id:"12987124",amount1:"324",amount2:"1.9",amount3:9},{id:"12987125",amount1:"621",amount2:"2.2",amount3:17},{id:"12987126",amount1:"539",amount2:"4.1",amount3:15}]}},methods:{arraySpanMethod:function(t){t.row,t.column;var e=t.rowIndex,t=t.columnIndex;if(e%2==0)return 0===t?[1,2]:1===t?[0,0]:void 0},objectSpanMethod:function(t){t.row,t.column;var e=t.rowIndex;if(0===t.columnIndex)return e%2==0?{rowspan:2,colspan:1}:{rowspan:0,colspan:0}}}}),"aex-demo18":a({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[[e("aex-table",{staticStyle:{width:"100%"},attrs:{data:t.tableData}},[e("aex-table-column",{attrs:{label:"序号",type:"index",index:t.indexMethod}}),t._v(" "),e("aex-table-column",{attrs:{prop:"date",label:"日期",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"coin",label:"币种",width:"180"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"type",label:"类型"}}),t._v(" "),e("aex-table-column",{attrs:{prop:"num",label:"数量"}})],1)]],2)},staticRenderFns:[]},{data:function(){return{tableData:[{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1},{date:"2016-05-03",coin:"GAT",type:"OTC交易-出售",num:"12.93856200",status:1}]}},methods:{indexMethod:function(t){return 2*t}}})}},n=n(0),a=Object(n.a)(a,function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("section",{staticClass:"content aex-doc"},[e("h1",[t._v("Table 表格")]),e("h3",[t._v("按需引入")]),t._m(0),e("h3",[t._v("基础表格")]),t._m(1),t._m(2),e("demo-block",[e("template",{slot:"source"},[e("aex-demo0")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("  <template>\n      <aex-radio-group v-model=\"tableSize\" size=\"small\" style='marginBottom:10px'>\n          <aex-radio-button label=\"\">默认</aex-radio-button>\n          <aex-radio-button label=\"medium\">medium</aex-radio-button>\n          <aex-radio-button label=\"small\">small</aex-radio-button>\n          <aex-radio-button label=\"mini\">mini</aex-radio-button>\n      </aex-radio-group>\n\n      <aex-table :data=\"tableData\" style=\"width: 100%\" :size='tableSize'>\n          <aex-table-column prop=\"date\" label=\"日期\" width=\"180\">\n          </aex-table-column>\n          <aex-table-column prop=\"coin\" label=\"币种\" width=\"180\">\n          </aex-table-column>\n          <aex-table-column prop=\"type\" label=\"类型\" width='120' show-overflow-tooltip>\n          </aex-table-column>\n          <aex-table-column prop=\"num\" label=\"数量\" align='center'>\n          </aex-table-column>\n          <aex-table-column prop=\"status\" label=\"状态\" align='right'>\n          </aex-table-column>\n      </aex-table>\n  </template>\n\n  <script>\n      export default {\n          data() {\n              return {\n                  tableSize: '',\n                  tableData: [{\n                          date: '2016-05-02',\n                          coin: 'GAT',\n                          type: 'OTC交易-出售',\n                          num: '+14.93856200',\n                          status: '已完成',\n                      },\n                      {\n                          date: '2016-05-02',\n                          coin: 'GAT',\n                          type: 'OTC交易-出售',\n                          num: '+14.93856200',\n                          status: '已完成',\n                      },\n                      {\n                          date: '2016-05-02',\n                          coin: 'GAT',\n                          type: 'OTC交易-出售',\n                          num: '+14.93856200',\n                          status: '已完成',\n                      },\n                      {\n                          date: '2016-05-02',\n                          coin: 'GAT',\n                          type: 'OTC交易-出售OTC交易-出售OTC交易-出售OTC交易-出售',\n                          num: '+14.93856200',\n                          status: '已完成',\n                      },\n                  ]\n              }\n          }\n      }\n  <\/script>\n")])])])],2),e("h3",[t._v("空数据 / 加载中")]),t._m(3),t._m(4),e("demo-block",[e("template",{slot:"source"},[e("aex-demo1")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('  <template>\n      <aex-text title=\'h4\'>默认空数据</aex-text>\n      <aex-table :data="tableData" style="width: 100%">\n          <aex-table-column prop="date" label="日期" width="180">\n          </aex-table-column>\n          <aex-table-column prop="coin" label="币种">\n          </aex-table-column>\n          <aex-table-column prop="type" label="类型">\n          </aex-table-column>\n          <aex-table-column prop="num" label="数量">\n          </aex-table-column>\n          <aex-table-column prop="status" label="状态">\n          </aex-table-column>\n      </aex-table>\n\n      <aex-text title=\'h4\' style=\'marginTop:20px\'>刷新按钮</aex-text>\n      <aex-table :data="tableData" style="width: 100%" emptyButtonText=\'刷新\' @emptyEvent=\'reLoad\'>\n          <aex-table-column prop="date" label="日期" width="180">\n          </aex-table-column>\n          <aex-table-column prop="coin" label="币种">\n          </aex-table-column>\n          <aex-table-column prop="type" label="类型">\n          </aex-table-column>\n          <aex-table-column prop="num" label="数量">\n          </aex-table-column>\n          <aex-table-column prop="status" label="状态">\n          </aex-table-column>\n      </aex-table>\n\n      <aex-text title=\'h4\' style=\'marginTop:20px\'>自定义空数据</aex-text>\n      <aex-table :data="tableData" style="width: 100%">\n          <aex-table-column prop="date" label="日期" width="180">\n          </aex-table-column>\n          <aex-table-column prop="coin" label="币种">\n          </aex-table-column>\n          <aex-table-column prop="type" label="类型">\n          </aex-table-column>\n          <aex-table-column prop="num" label="数量">\n          </aex-table-column>\n          <aex-table-column prop="status" label="状态">\n          </aex-table-column>\n          <div slot="empty">这里自定义空数据～～～</div>\n      </aex-table>\n\n      <aex-text title=\'h4\' style=\'marginTop:20px\'>加载中</aex-text>\n      <aex-table :data="tableData" style="width: 100%" emptyButtonText=\'刷新\' @emptyEvent=\'reLoad\' loading>\n          <aex-table-column prop="date" label="日期" width="180">\n          </aex-table-column>\n          <aex-table-column prop="coin" label="币种">\n          </aex-table-column>\n          <aex-table-column prop="type" label="类型">\n          </aex-table-column>\n          <aex-table-column prop="num" label="数量">\n          </aex-table-column>\n          <aex-table-column prop="status" label="状态">\n          </aex-table-column>\n      </aex-table>\n  </template>\n\n  <script>\n      export default {\n          data() {\n              return {\n                  tableData: []\n              }\n          },\n          methods: {\n              reLoad() {\n                  this.$message(\'真的没有数据了！！！\')\n              }\n          },\n      }\n  <\/script>\n')])])])],2),e("h3",[t._v("带边框表格")]),t._m(5),e("demo-block",[e("template",{slot:"source"},[e("aex-demo2")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('  <template>\n      <aex-table :data="tableData" style="width: 100%" border>\n          <aex-table-column prop="date" label="日期" width="180">\n          </aex-table-column>\n          <aex-table-column prop="coin" label="币种" width="180">\n          </aex-table-column>\n          <aex-table-column prop="type" label="类型">\n          </aex-table-column>\n      </aex-table>\n  </template>\n\n  <script>\n      export default {\n          data() {\n              return {\n                  tableData: [{\n                          date: \'2016-05-02\',\n                          coin: \'GAT\',\n                          type: \'OTC交易-出售\'\n                      },\n                      {\n                          date: \'2016-05-02\',\n                          coin: \'GAT\',\n                          type: \'OTC交易-出售\'\n                      },\n                      {\n                          date: \'2016-05-02\',\n                          coin: \'GAT\',\n                          type: \'OTC交易-出售\'\n                      },\n                  ]\n              }\n          }\n      }\n  <\/script>\n')])])])],2),e("h3",[t._v("带斑马纹表格")]),t._m(6),e("demo-block",[e("template",{slot:"source"},[e("aex-demo3")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table :data="tableData" style="width: 100%" stripe>\n        <aex-table-column prop="date" label="日期" width="180">\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="180">\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\'\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\'\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\'\n                    },\n                ]\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("带状态表格（自定义highlight）")]),t._m(7),e("demo-block",[e("template",{slot:"source"},[e("aex-demo4")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" style=\"width: 100%\" :row-class-name=\"tableRowClassName\">\n        <aex-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"coin\" label=\"币种\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"type\" label=\"类型\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<style>\n    .aex-table .warn {\n        background-color: #feefe5;\n    }\n\n    .aex-table .success {\n        background-color: #ebf7f4;\n    }\n</style>\n\n<script>\n    export default {\n        methods: {\n            tableRowClassName({\n                row,\n                rowIndex\n            }) {\n                if (rowIndex === 1) {\n                    return 'warn';\n                } else if (rowIndex === 2) {\n                    return 'success';\n                }\n                return '';\n            }\n        },\n        data() {\n            return {\n                tableData: [{\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                ]\n            }\n        }\n    }\n<\/script>\n")])])])],2),e("h3",[t._v("固定表头")]),t._m(8),e("demo-block",[e("template",{slot:"source"},[e("aex-demo5")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" style=\"width: 100%\" height='200'>\n        <aex-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"coin\" label=\"币种\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"type\" label=\"类型\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售'\n                    },\n                ]\n            }\n        }\n    }\n<\/script>\n")])])])],2),e("h3",[t._v("固定列")]),e("p",[t._v("横向内容过多时，可选择固定列。")]),e("demo-block",[e("div",[e("p",[t._v("固定列需要使用 "),e("code",[t._v("fixed")]),t._v(" 属性，它接受 Boolean 值或者 "),e("code",[t._v("left")]),e("code",[t._v("right")]),t._v(" ，表示左边固定还是右边固定。")])]),e("template",{slot:"source"},[e("aex-demo6")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table :data="tableData" border style="width: 800px">\n        <aex-table-column fixed prop="date" label="日期" width="200">\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="200">\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型" width="200">\n        </aex-table-column>\n        <aex-table-column prop="num" label="数量" width="200">\n        </aex-table-column>\n        <aex-table-column prop="status" label="状态" width="200">\n        </aex-table-column>\n        <aex-table-column fixed="right" label="操作" width="160">\n            <template slot-scope="scope">\n                <aex-button @click="handleClick(scope.row)" type="text" size="mini">详情</aex-button>\n                <aex-button type="text" size="mini">编辑</aex-button>\n            </template>\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        methods: {\n            handleClick(row) {\n                console.log(row);\n            }\n        },\n\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                ]\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("多级表头")]),e("p",[t._v("数据结构比较复杂的时候，可使用多级表头来展现数据的层次关系。\n在 aex-table-column 里面嵌套 aex-table-column，就可以实现多级表头。")]),e("demo-block",[e("template",{slot:"source"},[e("aex-demo7")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" border style=\"width: 100%\">\n        <aex-table-column prop=\"date\" label=\"日期\" width=\"200\">\n        </aex-table-column>\n\n        <aex-table-column label=\"币种信息\">\n            <aex-table-column prop=\"coin\" label=\"币种\" width=\"200\">\n            </aex-table-column>\n            <aex-table-column prop=\"type\" label=\"类型\">\n            </aex-table-column>\n            <aex-table-column prop=\"num\" label=\"数量\">\n            </aex-table-column>\n        </aex-table-column>\n        <aex-table-column prop=\"status\" label=\"状态\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: '已完成',\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: '已完成',\n\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: '已完成',\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: '已完成',\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: '已完成',\n                    },\n                ]\n            }\n        }\n    }\n<\/script>\n")])])])],2),e("h3",[t._v("单选")]),t._m(9),e("demo-block",[e("template",{slot:"source"},[e("aex-demo8")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table ref="singleTable" :data="tableData" highlight-current-row @current-change="handleCurrentChange" style="width: 100%">\n        <aex-table-column type="index" label="序号" width="50">\n        </aex-table-column>\n        <aex-table-column prop="date" label="日期" width="200">\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="200">\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型" width="200">\n        </aex-table-column>\n        <aex-table-column prop="num" label="数量" width="200">\n        </aex-table-column>\n        <aex-table-column prop="status" label="状态" width="200">\n        </aex-table-column>\n    </aex-table>\n    <div style="margin-top: 20px">\n        <aex-button type=\'outline\' @click="setCurrent(tableData[1])">选中第二行</aex-button>\n        <aex-button type=\'outline\' @click="setCurrent()">取消选择</aex-button>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                ],\n                currentRow: null\n            }\n        },\n\n        methods: {\n            setCurrent(row) {\n                this.$refs.singleTable.setCurrentRow(row);\n            },\n            handleCurrentChange(val) {\n                this.currentRow = val;\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("多选")]),t._m(10),e("demo-block",[e("template",{slot:"source"},[e("aex-demo9")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table ref="multipleTable" :data="tableData" style="width: 100%" @selection-change="handleSelectionChange">\n        <aex-table-column type="selection" width="55">\n        </aex-table-column>\n        <aex-table-column prop="date" label="日期" width="200">\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="200">\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型" width="200">\n        </aex-table-column>\n        <aex-table-column prop="num" label="数量">\n        </aex-table-column>\n        <aex-table-column prop="status" label="状态">\n        </aex-table-column>\n    </aex-table>\n    <div style="margin-top: 20px">\n        <aex-button width=\'200px\' @click="toggleSelection([tableData[1], tableData[2]])">切换第二、第三行的选中状态</aex-button>\n        <aex-button @click="toggleSelection()">取消选择</aex-button>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: \'已完成\',\n                    },\n                ],\n                multipleSelection: []\n            }\n        },\n\n        methods: {\n            toggleSelection(rows) {\n                if (rows) {\n                    rows.forEach(row => {\n                        this.$refs.multipleTable.toggleRowSelection(row);\n                    });\n                } else {\n                    this.$refs.multipleTable.clearSelection();\n                }\n            },\n            handleSelectionChange(val) {\n                this.multipleSelection = val;\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("排序")]),t._m(11),e("demo-block",[e("template",{slot:"source"},[e("aex-demo10")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table :data="tableData" style="width: 100%" :default-sort="{prop: \'date\', order: \'descending\'}">\n        <aex-table-column prop="date" label="日期" width="200" sortable>\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="200" sortable>\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型" width="200" sortable>\n        </aex-table-column>\n        <aex-table-column prop="num" label="数量" sortable>\n        </aex-table-column>\n        <aex-table-column prop="status" label="状态" :formatter="formatter">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-01\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: 1,\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'BTC\',\n                        type: \'OTC交易-出售\',\n                        num: \'+18.93856200\',\n                        status: 0,\n\n                    },\n                    {\n                        date: \'2016-05-03\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+12.93856200\',\n                        status: 1,\n                    },\n                ],\n            }\n        },\n        methods: {\n            formatter(row, column) {\n                return row.status == 1 ? \'已完成\' : \'待处理\';\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("筛选")]),t._m(12),e("demo-block",[e("template",{slot:"source"},[e("aex-demo11")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-button @click="resetDateFilter">清除日期过滤器</aex-button>\n    <aex-button @click="clearFilter">清除所有过滤器</aex-button>\n    <aex-table ref="filterTable" :data="tableData" style="width: 100%">\n        <aex-table-column prop="date" label="日期" width="200" sortable column-key="date" :filters="[{text: \'2016-05-01\', value: \'2016-05-01\'}, {text: \'2016-05-02\', value: \'2016-05-02\'}, {text: \'2016-05-03\', value: \'2016-05-03\'}]" :filter-method="filterHandler">\n        </aex-table-column>\n        <aex-table-column prop="coin" label="币种" width="200" sortable :filters="[{ text: \'GAT\', value: \'GAT\' }, { text: \'BTC\', value: \'BTC\' }]" :filter-method="filterCoin" filter-placement="bottom-end">\n        </aex-table-column>\n        <aex-table-column prop="type" label="类型" width="200" sortable>\n        </aex-table-column>\n        <aex-table-column prop="num" label="数量" sortable>\n        </aex-table-column>\n        <aex-table-column prop="status" label="状态" :formatter="formatter">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-01\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: 1,\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'BTC\',\n                        type: \'OTC交易-出售\',\n                        num: \'+18.93856200\',\n                        status: 0,\n\n                    },\n                    {\n                        date: \'2016-05-03\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+12.93856200\',\n                        status: 1,\n                    },\n                ],\n            }\n        },\n        methods: {\n            resetDateFilter() {\n                this.$refs.filterTable.clearFilter(\'date\');\n            },\n            clearFilter() {\n                this.$refs.filterTable.clearFilter();\n            },\n            formatter(row, column) {\n                return row.address;\n            },\n            filterCoin(value, row) {\n                return row.coin === value;\n            },\n            filterHandler(value, row, column) {\n                const property = column[\'property\'];\n                return row[property] === value;\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("自定义列模板")]),t._m(13),e("demo-block",[e("template",{slot:"source"},[e("aex-demo12")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table :data="tableData" style="width: 100%">\n        <aex-table-column label="日期" width="180">\n            <template slot-scope="scope">\n                <i class="aex-icon-time"></i>\n                <span style="margin-left: 10px">{{ scope.row.date }}</span>\n            </template>\n        </aex-table-column>\n        <aex-table-column label="币名" width="180">\n            <template slot-scope="scope">\n                <aex-popover trigger="hover" placement="left">\n                    <aex-text title=\'h3\'>币名: {{ scope.row.coin }}</aex-text>\n                    <aex-text>类型: {{ scope.row.type }}</aex-text>\n                    <aex-text>数量: {{ scope.row.num }}</aex-text>\n                    <aex-tag slot="reference" size="medium">{{ scope.row.coin }}</aex-tag>\n                </aex-popover>\n            </template>\n        </aex-table-column>\n        <aex-table-column label="操作">\n            <template slot-scope="scope">\n                <aex-button size="mini" type=\'outline\' @click="handleEdit(scope.$index, scope.row)">编辑</aex-button>\n                <aex-button size="mini" type="danger" @click="handleDelete(scope.$index, scope.row)">删除</aex-button>\n            </template>\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: \'2016-05-01\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+14.93856200\',\n                        status: 1,\n                    },\n                    {\n                        date: \'2016-05-02\',\n                        coin: \'BTC\',\n                        type: \'OTC交易-出售\',\n                        num: \'+18.93856200\',\n                        status: 0,\n\n                    },\n                    {\n                        date: \'2016-05-03\',\n                        coin: \'GAT\',\n                        type: \'OTC交易-出售\',\n                        num: \'+12.93856200\',\n                        status: 1,\n                    },\n                ],\n            }\n        },\n        methods: {\n            handleEdit(index, row) {\n                console.log(index, row);\n            },\n            handleDelete(index, row) {\n                console.log(index, row);\n            }\n        }\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("展开行")]),t._m(14),e("demo-block",[e("template",{slot:"source"},[e("aex-demo13")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" style=\"width: 100%\">\n        <aex-table-column type=\"expand\">\n            <template slot-scope=\"props\">\n                <aex-form label-position=\"left\" inline>\n                    <aex-form-item label=\"日期\">\n                        <span>{{ props.row.date }}</span>\n                    </aex-form-item>\n                    <aex-form-item label=\"类型\">\n                        <span>{{ props.row.type }}</span>\n                    </aex-form-item>\n                </aex-form>\n            </template>\n        </aex-table-column>\n        <aex-table-column label=\"币种\" prop=\"coin\">\n        </aex-table-column>\n        <aex-table-column label=\"数量\" prop=\"num\">\n        </aex-table-column>\n        <aex-table-column label=\"状态\" prop=\"status\" :formatter=\"formatter\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                        date: '2016-05-01',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: 1,\n                    },\n                    {\n                        date: '2016-05-02',\n                        coin: 'BTC',\n                        type: 'OTC交易-出售',\n                        num: '+18.93856200',\n                        status: 0,\n\n                    },\n                    {\n                        date: '2016-05-03',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+12.93856200',\n                        status: 1,\n                    },\n                ],\n            }\n        },\n        methods: {\n            formatter(row, column) {\n                return row.status == 1 ? '已完成' : '待处理';\n            }\n        }\n    }\n<\/script>\n")])])])],2),e("h3",[t._v("树形数据与懒加载")]),t._m(15),e("demo-block",[e("template",{slot:"source"},[e("aex-demo14")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <div>\n        <aex-table :data=\"tableData\" style=\"width: 100%;margin-bottom: 20px;\" row-key=\"id\" border default-expand-all :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\">\n            <aex-table-column prop=\"date\" label=\"日期\" sortable width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"coin\" label=\"币种\" sortable width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"type\" label=\"类型\" sortable width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"num\" label=\"数量\">\n            </aex-table-column>\n        </aex-table>\n\n        <aex-table :data=\"tableData1\" style=\"width: 100%\" row-key=\"id\" border lazy :load=\"load\" :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\">\n            <aex-table-column prop=\"date\" label=\"币种\" width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"coin\" label=\"姓名\" width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"type\" label=\"类型\" width=\"180\">\n            </aex-table-column>\n            <aex-table-column prop=\"num\" label=\"数量\">\n            </aex-table-column>\n        </aex-table>\n    </div>\n</template>\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                    id: 1,\n                    date: '2016-05-01',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '+14.93856200',\n                    status: 1,\n                }, {\n                    id: 2,\n                    date: '2016-05-01',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '+14.93856200',\n                    status: 1,\n                }, {\n                    id: 3,\n                    date: '2016-05-01',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '+14.93856200',\n                    status: 1,\n                    children: [{\n                        id: 31,\n                        date: '2016-05-01',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: 1,\n                    }, {\n                        id: 32,\n                        date: '2016-05-01',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: 1,\n                    }]\n                }, ],\n                tableData1: [{\n                        id: 1,\n                        date: '2016-05-01',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+14.93856200',\n                        status: 1,\n                    },\n                    {\n                        id: 2,\n                        date: '2016-05-02',\n                        coin: 'BTC',\n                        type: 'OTC交易-出售',\n                        num: '+18.93856200',\n                        status: 0,\n                        hasChildren: true\n                    },\n                    {\n                        id: 3,\n                        date: '2016-05-03',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+12.93856200',\n                        status: 1,\n                    },\n                ],\n            }\n        },\n        methods: {\n            load(tree, treeNode, resolve) {\n                setTimeout(() => {\n                    resolve([{\n                        id: 21,\n                        date: '2016-05-03',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+12.93856200',\n                        status: 1,\n                    }, {\n                        id: 22,\n                        date: '2016-05-03',\n                        coin: 'GAT',\n                        type: 'OTC交易-出售',\n                        num: '+12.93856200',\n                        status: 1,\n                    }])\n                }, 1000)\n            }\n        },\n    }\n<\/script>\n")])])])],2),e("h3",[t._v("自定义表头")]),t._m(16),e("demo-block",[e("template",{slot:"source"},[e("aex-demo15")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <aex-table :data="tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))" style="width: 100%">\n        <aex-table-column label="日期" prop="date">\n        </aex-table-column>\n        <aex-table-column label="币种" prop="coin">\n        </aex-table-column>\n        <aex-table-column prop="type">\n            <template slot="header" slot-scope="scope">\n                <aex-tooltip content="这里就提示一下">\n                    <span>类型 <i class=\'aex-icon-question-circle\' /></span>\n                </aex-tooltip>\n            </template>\n        </aex-table-column>\n        <aex-table-column align="right">\n            <template slot="header" slot-scope="scope">\n                <aex-input v-model="search" size="mini" placeholder="输入搜索" />\n            </template>\n            <template slot-scope="scope">\n                <aex-button size="mini" @click="handleEdit(scope.$index, scope.row)">详情</aex-button>\n                <aex-button size="mini" type="danger" @click="handleDelete(scope.$index, scope.row)">删除</aex-button>\n            </template>\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                    date: \'2016-05-03\',\n                    coin: \'GAT\',\n                    type: \'OTC交易-出售\',\n                    num: \'+12.93856200\',\n                    status: 1,\n                }, {\n                    date: \'2016-05-03\',\n                    coin: \'GAT\',\n                    type: \'OTC交易-出售\',\n                    num: \'+12.93856200\',\n                    status: 1,\n                }, {\n                    date: \'2016-05-03\',\n                    coin: \'GAT\',\n                    type: \'OTC交易-出售\',\n                    num: \'+12.93856200\',\n                    status: 1,\n                }],\n                search: \'\'\n            }\n        },\n        methods: {\n            handleEdit(index, row) {\n                console.log(index, row);\n            },\n            handleDelete(index, row) {\n                console.log(index, row);\n            }\n        },\n    }\n<\/script>\n')])])])],2),e("h3",[t._v("表尾合计行")]),t._m(17),e("demo-block",[e("template",{slot:"source"},[e("aex-demo16")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" border show-summary style=\"width: 100%\">\n        <aex-table-column prop=\"date\" label=\"日期\">\n        </aex-table-column>\n        <aex-table-column prop=\"coin\" sortable label=\"币种\">\n        </aex-table-column>\n        <aex-table-column prop=\"type\" sortable label=\"类型\">\n        </aex-table-column>\n        <aex-table-column prop=\"num\" sortable label=\"数量\">\n        </aex-table-column>\n    </aex-table>\n\n    <aex-table :data=\"tableData\" border height=\"200\" :summary-method=\"getSummaries\" show-summary style=\"width: 100%; margin-top: 20px\">\n        <aex-table-column prop=\"date\" label=\"日期\">\n        </aex-table-column>\n        <aex-table-column prop=\"coin\" label=\"币种\">\n        </aex-table-column>\n        <aex-table-column prop=\"type\" label=\"类型\">\n        </aex-table-column>\n        <aex-table-column prop=\"num\" label=\"num\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }]\n            };\n        },\n        methods: {\n            getSummaries(param) {\n                const {\n                    columns,\n                    data\n                } = param;\n                const sums = [];\n                columns.forEach((column, index) => {\n                    if (index === 0) {\n                        sums[index] = '总价';\n                        return;\n                    }\n                    const values = data.map(item => Number(item[column.property]));\n                    if (!values.every(value => isNaN(value))) {\n                        sums[index] = values.reduce((prev, curr) => {\n                            const value = Number(curr);\n                            if (!isNaN(value)) {\n                                return prev + curr;\n                            } else {\n                                return prev;\n                            }\n                        }, 0);\n                        sums[index] += ' 元';\n                    } else {\n                        sums[index] = '';\n                    }\n                });\n\n                return sums;\n            }\n        }\n    };\n<\/script>\n")])])])],2),e("h3",[t._v("合并行或列")]),t._m(18),e("demo-block",[e("template",{slot:"source"},[e("aex-demo17")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v('<template>\n    <div>\n        <aex-table :data="tableData" :span-method="arraySpanMethod" border style="width: 100%">\n            <aex-table-column prop="id" label="ID" width="180">\n            </aex-table-column>\n            <aex-table-column prop="amount1" sortable label="A">\n            </aex-table-column>\n            <aex-table-column prop="amount2" sortable label="B">\n            </aex-table-column>\n            <aex-table-column prop="amount3" sortable label="C">\n            </aex-table-column>\n        </aex-table>\n\n        <aex-table :data="tableData" :span-method="objectSpanMethod" border style="width: 100%; margin-top: 20px">\n            <aex-table-column prop="id" label="ID" width="180">\n            </aex-table-column>\n            <aex-table-column prop="amount1" label="A">\n            </aex-table-column>\n            <aex-table-column prop="amount2" label="B">\n            </aex-table-column>\n            <aex-table-column prop="amount3" label="C">\n            </aex-table-column>\n        </aex-table>\n    </div>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                    id: \'12987122\',\n                    amount1: \'234\',\n                    amount2: \'3.2\',\n                    amount3: 10\n                }, {\n                    id: \'12987123\',\n                    amount1: \'165\',\n                    amount2: \'4.43\',\n                    amount3: 12\n                }, {\n                    id: \'12987124\',\n                    amount1: \'324\',\n                    amount2: \'1.9\',\n                    amount3: 9\n                }, {\n                    id: \'12987125\',\n                    amount1: \'621\',\n                    amount2: \'2.2\',\n                    amount3: 17\n                }, {\n                    id: \'12987126\',\n                    amount1: \'539\',\n                    amount2: \'4.1\',\n                    amount3: 15\n                }]\n            };\n        },\n        methods: {\n            arraySpanMethod({\n                row,\n                column,\n                rowIndex,\n                columnIndex\n            }) {\n                if (rowIndex % 2 === 0) {\n                    if (columnIndex === 0) {\n                        return [1, 2];\n                    } else if (columnIndex === 1) {\n                        return [0, 0]; // 0 表示不合并，\n                    }\n                }\n            },\n\n            objectSpanMethod({\n                row,\n                column,\n                rowIndex,\n                columnIndex\n            }) {\n                if (columnIndex === 0) {\n                    if (rowIndex % 2 === 0) {\n                        return {\n                            rowspan: 2,\n                            colspan: 1\n                        };\n                    } else {\n                        return {\n                            rowspan: 0,\n                            colspan: 0\n                        };\n                    }\n                }\n            }\n        }\n    };\n<\/script>\n')])])])],2),e("h3",[t._v("自定义索引")]),t._m(19),e("demo-block",[e("template",{slot:"source"},[e("aex-demo18")],1),e("template",{slot:"highlight"},[e("pre",{pre:!0},[e("code",{pre:!0,attrs:{class:"html"}},[t._v("<template>\n    <aex-table :data=\"tableData\" style=\"width: 100%\">\n        <aex-table-column label=\"序号\" type=\"index\" :index=\"indexMethod\">\n        </aex-table-column>\n        <aex-table-column prop=\"date\" label=\"日期\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"coin\" label=\"币种\" width=\"180\">\n        </aex-table-column>\n        <aex-table-column prop=\"type\" label=\"类型\">\n        </aex-table-column>\n        <aex-table-column prop=\"num\" label=\"数量\">\n        </aex-table-column>\n    </aex-table>\n</template>\n\n<script>\n    export default {\n        data() {\n            return {\n                tableData: [{\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }, {\n                    date: '2016-05-03',\n                    coin: 'GAT',\n                    type: 'OTC交易-出售',\n                    num: '12.93856200',\n                    status: 1,\n                }],\n            }\n        },\n        methods: {\n            indexMethod(index) {\n                return index * 2;\n            }\n        }\n    };\n<\/script>\n")])])])],2),e("h3",[t._v("Table Attributes")]),t._m(20),e("h3",[t._v("Table Events")]),t._m(21),e("h3",[t._v("Table Methods")]),t._m(22),e("h3",[t._v("Table Slot")]),t._m(23),e("h3",[t._v("Table-column Attributes")]),t._m(24),e("h3",[t._v("Table-column Scoped Slot")]),t._m(25)],1)},[function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("pre",[e("code",[t._v("import { Table,TableColumn } from 'aex-ui';\nVue.use(Table)\nVue.use(TableColumn)\n")])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("在 "),e("code",[t._v("aex-table")]),t._v(" 元素中绑定 "),e("code",[t._v("data")]),t._v(" 对象数组，"),e("br"),t._v("\n在 "),e("code",[t._v("aex-table-column")]),t._v(" 中用 "),e("code",[t._v("prop")]),t._v(" 属性来对应对象中的键名即可填入数据，"),e("br"),t._v("\n用 "),e("code",[t._v("label")]),t._v(" 属性来定义表格的列名。"),e("br"),t._v("\n用 "),e("code",[t._v("width")]),t._v(" 属性来定义列宽。"),e("br"),t._v("\n默认情况下若内容过多会折行显示，若需要单行显示可以在aex-table-column上设置 "),e("code",[t._v("show-overflow-tooltip")]),t._v(" 为 "),e("code",[t._v("true")]),t._v(" 时多余的内容会在 hover 时以 tooltip 的形式显示出来。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[e("code",[t._v("size")]),t._v(" : 表格大小 defalut / medium / small / mini"),e("br"),e("code",[t._v("align")]),t._v(" : 给 "),e("code",[t._v("aex-table-column")]),t._v(" 设置对齐方式，默认 "),e("code",[t._v("left")]),t._v(" , 值有 "),e("code",[t._v("left, center, right")])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("数据为空时 默认展示 "),e("code",[t._v("Empty组件 no_record类型")]),t._v(" :\n可通过 "),e("code",[t._v("emptyType, emptyImageWidth, emptyImageHeight, emptyText, emptyButtonText, emptyEvent")]),t._v(" 等参数自定义"),e("br"),t._v("\n或者 通过 "),e("code",[t._v('slot="empty"')]),t._v(" 的插槽方式自定义空数据")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[e("code",[t._v("loading")]),t._v(" 设置为 "),e("code",[t._v("true")]),t._v(" 即可展示加载中")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[e("code",[t._v("border")]),t._v(" 属性 设置为 "),e("code",[t._v("true")]),t._v(" 可设置为带边框的表哥")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("使用带斑马纹的表格，用于区分出不同行的数据的视觉效果。"),e("br"),e("code",[t._v("stripe")]),t._v(" 属性可以创建带斑马纹的表格。它接受一个 "),e("code",[t._v("Boolean")]),t._v(" ，默认为 "),e("code",[t._v("false")]),t._v(" ，设置为 "),e("code",[t._v("true")]),t._v(" 即为启用。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[e("code",[t._v("row-class-name")]),t._v(" 属性来为 Table 中的某一行添加 class，来设置某一样的样式，一般用于表示某行数据的状态"),e("br"),t._v("\nrow-class-name: (row, rowIndex)=> string / string")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("纵向内容过多时，可选择固定表头。\n在 "),e("code",[t._v("aex-table")]),t._v(" 元素中定义了 "),e("code",[t._v("height")]),t._v(" 属性即可, 当内容超过设定高度时，就会出现滚动条"),e("br"),t._v("\n设置 "),e("code",[t._v("max-height")]),t._v(" 也可以，")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("添加 "),e("code",[t._v("highlight-current-row")]),t._v(" 属性即可实现单选。之后由 "),e("code",[t._v("current-change")]),t._v(" 事件来管理选中时触发的事件，它会传入 "),e("code",[t._v("currentRow")]),t._v(" ， "),e("code",[t._v("oldCurrentRow")]),t._v(" 。"),e("br"),t._v("\n如果需要显示索引，可以增加一列 "),e("code",[t._v("aex-table-column")]),t._v(" ，设置 "),e("code",[t._v("type")]),t._v(" 属性为 "),e("code",[t._v("index")]),t._v(" 即可显示从 1 开始的索引号。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("额外添加一个 "),e("code",[t._v("aex-table-column")]),t._v(" ，设 "),e("code",[t._v("type")]),t._v(" 属性为 "),e("code",[t._v("selection")]),t._v(" 即可实现多选")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[e("code",[t._v("sortable")]),t._v(" 属性即可实现以该列为基准的排序，接受一个 "),e("code",[t._v("Boolean")]),t._v(" ，默认为 "),e("code",[t._v("false")]),t._v(" 。"),e("br"),t._v("\n可以通过 Table 的 "),e("code",[t._v("default-sort")]),t._v(" 属性设置默认的排序列和排序顺序。"),e("br"),t._v("\n可以使用 "),e("code",[t._v("sort-method")]),t._v(" 或者 "),e("code",[t._v("sort-by")]),t._v(" 使用自定义的排序规则。"),e("br"),t._v("\n如果需要后端排序，需将 "),e("code",[t._v("sortable")]),t._v(" 设置为 "),e("code",[t._v("custom")]),t._v(" ，同时在 Table 上监听 "),e("code",[t._v("sort-change")]),t._v(" 事件，在事件回调中可以获取当前排序的字段名和排序顺序，从而向接口请求排序后的表格数据。"),e("br"),e("code",[t._v("formatter")]),t._v(" 属性，它用于格式化指定列的值，接受一个 "),e("code",[t._v("Function")]),t._v(" ，会传入两个参数： "),e("code",[t._v("row")]),t._v(" 和 "),e("code",[t._v("column")]),t._v(" ，可以根据自己的需求进行处理。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("在列中同时设置 "),e("code",[t._v("filters")]),e("code",[t._v("filter-method")]),t._v(" 属性即可开启该列的筛选:"),e("br"),t._v("\nfilters 是一个数组，是放置渲染筛选弹窗的列表的数据，格式[{key:xxx, value:xxx}, ...]"),e("br"),e("code",[t._v("filter-method")]),t._v(" 是一个方法，它用于决定某些数据是否显示，会传入三个参数： "),e("code",[t._v("value")]),t._v(" , "),e("code",[t._v("row")]),t._v(" 和 "),e("code",[t._v("column")]),t._v(" 。(value, row, column)=> Boolean")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("自定义列的显示内容，可组合其他组件使用。\n通过 "),e("code",[t._v("Scoped slot")]),t._v(" 可以获取到 row, column, $index 和 store（table 内部的状态管理）的数据")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v('当行内容过多并且不想显示横向滚动条时，可以使用 Table 展开行功能。\n通过设置 type="expand" 和 '),e("code",[t._v("Scoped slot")]),t._v(" 可以开启展开行功能，"),e("br"),e("code",[t._v("aex-table-column")]),t._v(" 的模板会被渲染成为展开行的内容，展开行可访问的属性与使用自定义列模板时的 "),e("code",[t._v("Scoped slot")]),t._v(" 相同。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("支持树类型的数据的显示。当 row 中包含 "),e("code",[t._v("children")]),t._v(" 字段时，被视为树形数据。渲染树形数据时，必须要指定 "),e("code",[t._v("row-key")]),t._v(" 。"),e("br"),t._v("\n支持子节点数据异步加载。设置 Table 的 "),e("code",[t._v("lazy")]),t._v(" 属性为 true 与加载函数 "),e("code",[t._v("load")]),t._v(" 。通过指定 row 中的 "),e("code",[t._v("hasChildren")]),t._v(" 字段来指定哪些行是包含子节点。 "),e("code",[t._v("children")]),t._v(" 与 "),e("code",[t._v("hasChildren")]),t._v(" 都可以通过 "),e("code",[t._v("tree-props")]),t._v(" 配置。"),e("br"),t._v("\n非异步加载的数据，可以使用 "),e("code",[t._v("default-expand-all")]),t._v(" 默认展开所有的子节点")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("通过 "),e("code",[t._v('slot="header"')]),t._v(" 来自定义表头。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("将 "),e("code",[t._v("show-summary")]),t._v(" 设置为 "),e("code",[t._v("true")]),t._v(" 就会在表格尾部展示合计行。"),e("br"),t._v("\n默认情况下，对于合计行，第一列不进行数据求合操作，而是显示「合计」二字（可通过 "),e("code",[t._v("sum-text")]),t._v(" 配置），其余列会将本列所有数值进行求合操作，并显示出来。"),e("br"),t._v("\n也可以定义自己的合计逻辑。使用 "),e("code",[t._v("summary-method")]),t._v(" 并传入一个方法，返回一个数组，这个数组中的各项就会显示在合计行的各列中，具体可以参考本例中的第二个表格。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("通过给 "),e("code",[t._v("table")]),t._v(" 传入 "),e("code",[t._v("span-method")]),t._v(" 方法可以实现合并行或列，方法的参数是一个对象，里面包含当前行 "),e("code",[t._v("row")]),t._v(" 、当前列 "),e("code",[t._v("column")]),t._v(" 、当前行号 "),e("code",[t._v("rowIndex")]),t._v(" 、当前列号 "),e("code",[t._v("columnIndex")]),t._v(" 四个属性。"),e("br"),t._v("\n该函数可以返回一个包含两个元素的数组:[ "),e("code",[t._v("rowspan")]),t._v(" , "),e("code",[t._v("colspan")]),t._v(" ]。 也可以返回一个键名为 "),e("code",[t._v("rowspan")]),t._v(" 和 "),e("code",[t._v("colspan")]),t._v(" 的对象。"),e("br"),t._v("\n0 表示不合并，"),e("br"),t._v("\nrowspan: 代表向下合并几行，"),e("br"),t._v("\ncolspan: 代表向右合并几行，")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("p",[t._v("通过给 "),e("code",[t._v("type=index")]),t._v(" 的列传入 "),e("code",[t._v("index")]),t._v(" 属性，可以自定义索引。该属性传入数字时，将作为索引的起始值。也可以传入一个方法，它提供当前行的行号（从 "),e("code",[t._v("0")]),t._v(" 开始）作为参数，返回值将作为索引展示。")])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("data")]),e("td",[t._v("显示的数据")]),e("td",[t._v("array")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("height")]),e("td",[t._v("Table 的高度，默认为自动高度。如果 height 为 number 类型，单位 px；如果 height 为 string 类型，则这个高度会设置为 Table 的 style.height 的值，Table 的高度会受控于外部样式。")]),e("td",[t._v("string/number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("max-height")]),e("td",[t._v("Table 的最大高度。合法的值为数字或者单位为 px 的高度。")]),e("td",[t._v("string/number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("stripe")]),e("td",[t._v("是否为斑马纹 table")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("border")]),e("td",[t._v("是否带有纵向边框")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("size")]),e("td",[t._v("Table 的尺寸")]),e("td",[t._v("string")]),e("td",[t._v("medium / small / mini")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("fit")]),e("td",[t._v("列的宽度是否自撑开")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("show-header")]),e("td",[t._v("是否显示表头")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("highlight-current-row")]),e("td",[t._v("是否要高亮当前行")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("current-row-key")]),e("td",[t._v("当前行的 key，只写属性")]),e("td",[t._v("String, Number")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-class-name")]),e("td",[t._v("行的 className 的回调方法，也可以使用字符串为所有行设置一个固定的 className。")]),e("td",[t._v("Function({row, rowIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-style")]),e("td",[t._v("行的 style 的回调方法，也可以使用一个固定的 Object 为所有行设置一样的 Style。")]),e("td",[t._v("Function({row, rowIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("cell-class-name")]),e("td",[t._v("单元格的 className 的回调方法，也可以使用字符串为所有单元格设置一个固定的 className。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("cell-style")]),e("td",[t._v("单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有单元格设置一样的 Style。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-row-class-name")]),e("td",[t._v("表头行的 className 的回调方法，也可以使用字符串为所有表头行设置一个固定的 className。")]),e("td",[t._v("Function({row, rowIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-row-style")]),e("td",[t._v("表头行的 style 的回调方法，也可以使用一个固定的 Object 为所有表头行设置一样的 Style。")]),e("td",[t._v("Function({row, rowIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-cell-class-name")]),e("td",[t._v("表头单元格的 className 的回调方法，也可以使用字符串为所有表头单元格设置一个固定的 className。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("header-cell-style")]),e("td",[t._v("表头单元格的 style 的回调方法，也可以使用一个固定的 Object 为所有表头单元格设置一样的 Style。")]),e("td",[t._v("Function({row, column, rowIndex, columnIndex})/Object")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("row-key")]),e("td",[t._v("行数据的 Key，用来优化 Table 的渲染；在使用 reserve-selection 功能与显示树形数据时，该属性是必填的。类型为 String 时，支持多层访问： "),e("code",[t._v("user.info.id")]),t._v(" ，但不支持 "),e("code",[t._v("user.info[0].id")]),t._v(" ，此种情况请使用 "),e("code",[t._v("Function")]),t._v(" 。")]),e("td",[t._v("Function(row)/String")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("default-expand-all")]),e("td",[t._v("是否默认展开所有行，当 Table 包含展开行存在或者为树形表格时有效")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("expand-row-keys")]),e("td",[t._v("可以通过该属性设置 Table 目前的展开行，需要设置 row-key 属性才能使用，该属性为展开行的 keys 数组。")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td")]),e("tr",[e("td",[t._v("default-sort")]),e("td",[t._v("默认的排序列的 prop 和顺序。它的 "),e("code",[t._v("prop")]),t._v(" 属性指定默认的排序的列， "),e("code",[t._v("order")]),t._v(" 指定默认排序的顺序")]),e("td",[t._v("Object")]),e("td",[e("code",[t._v("order")]),t._v(" : ascending, descending")]),e("td",[t._v("如果只指定了 "),e("code",[t._v("prop")]),t._v(" , 没有指定 "),e("code",[t._v("order")]),t._v(" , 则默认顺序是ascending")])]),e("tr",[e("td",[t._v("tooltip-effect")]),e("td",[t._v("tooltip "),e("code",[t._v("effect")]),t._v(" 属性")]),e("td",[t._v("String")]),e("td",[t._v("dark/light")]),e("td")]),e("tr",[e("td",[t._v("show-summary")]),e("td",[t._v("是否在表尾显示合计行")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("sum-text")]),e("td",[t._v("合计行第一列的文本")]),e("td",[t._v("String")]),e("td",[t._v("—")]),e("td",[t._v("合计")])]),e("tr",[e("td",[t._v("summary-method")]),e("td",[t._v("自定义的合计计算方法")]),e("td",[t._v("Function({ columns, data })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("span-method")]),e("td",[t._v("合并行或列的计算方法")]),e("td",[t._v("Function({ row, column, rowIndex, columnIndex })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("select-on-indeterminate")]),e("td",[t._v("在多选表格中，当仅有部分行被选中时，点击表头的多选框时的行为。若为 true，则选中所有行；若为 false，则取消选择所有行")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("indent")]),e("td",[t._v("展示树形数据时，树节点的缩进")]),e("td",[t._v("Number")]),e("td",[t._v("—")]),e("td",[t._v("16")])]),e("tr",[e("td",[t._v("lazy")]),e("td",[t._v("是否懒加载子节点数据")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("load")]),e("td",[t._v("加载子节点数据的函数，lazy 为 true 时生效，函数第二个参数包含了节点的层级信息")]),e("td",[t._v("Function(row, treeNode, resolve)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("tree-props")]),e("td",[t._v("渲染嵌套数据的配置选项")]),e("td",[t._v("Object")]),e("td",[t._v("—")]),e("td",[t._v("{ hasChildren: 'hasChildren', children: 'children' }")])])])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("事件名")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("select")]),e("td",[t._v("当用户手动勾选数据行的 Checkbox 时触发的事件")]),e("td",[t._v("selection, row")])]),e("tr",[e("td",[t._v("select-all")]),e("td",[t._v("当用户手动勾选全选 Checkbox 时触发的事件")]),e("td",[t._v("selection")])]),e("tr",[e("td",[t._v("selection-change")]),e("td",[t._v("当选择项发生变化时会触发该事件")]),e("td",[t._v("selection")])]),e("tr",[e("td",[t._v("cell-mouse-enter")]),e("td",[t._v("当单元格 hover 进入时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("cell-mouse-leave")]),e("td",[t._v("当单元格 hover 退出时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("cell-click")]),e("td",[t._v("当某个单元格被点击时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("cell-dblclick")]),e("td",[t._v("当某个单元格被双击击时会触发该事件")]),e("td",[t._v("row, column, cell, event")])]),e("tr",[e("td",[t._v("row-click")]),e("td",[t._v("当某一行被点击时会触发该事件")]),e("td",[t._v("row, column, event")])]),e("tr",[e("td",[t._v("row-contextmenu")]),e("td",[t._v("当某一行被鼠标右键点击时会触发该事件")]),e("td",[t._v("row, column, event")])]),e("tr",[e("td",[t._v("row-dblclick")]),e("td",[t._v("当某一行被双击时会触发该事件")]),e("td",[t._v("row, column, event")])]),e("tr",[e("td",[t._v("header-click")]),e("td",[t._v("当某一列的表头被点击时会触发该事件")]),e("td",[t._v("column, event")])]),e("tr",[e("td",[t._v("header-contextmenu")]),e("td",[t._v("当某一列的表头被鼠标右键点击时触发该事件")]),e("td",[t._v("column, event")])]),e("tr",[e("td",[t._v("sort-change")]),e("td",[t._v("当表格的排序条件发生变化的时候会触发该事件")]),e("td",[t._v("{ column, prop, order }")])]),e("tr",[e("td",[t._v("filter-change")]),e("td",[t._v("当表格的筛选条件发生变化的时候会触发该事件，参数的值是一个对象，对象的 key 是 column 的 columnKey，对应的 value 为用户选择的筛选条件的数组。")]),e("td",[t._v("filters")])]),e("tr",[e("td",[t._v("current-change")]),e("td",[t._v("当表格的当前行发生变化的时候会触发该事件，如果要高亮当前行，请打开表格的 highlight-current-row 属性")]),e("td",[t._v("currentRow, oldCurrentRow")])]),e("tr",[e("td",[t._v("header-dragend")]),e("td",[t._v("当拖动表头改变了列的宽度的时候会触发该事件")]),e("td",[t._v("newWidth, oldWidth, column, event")])]),e("tr",[e("td",[t._v("expand-change")]),e("td",[t._v("当用户对某一行展开或者关闭的时候会触发该事件（展开行时，回调的第二个参数为 expandedRows；树形表格时第二参数为 expanded）")]),e("td",[t._v("row, (expandedRows | expanded)")])])])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("方法名")]),e("th",[t._v("说明")]),e("th",[t._v("参数")])])]),e("tbody",[e("tr",[e("td",[t._v("clearSelection")]),e("td",[t._v("用于多选表格，清空用户的选择")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("toggleRowSelection")]),e("td",[t._v("用于多选表格，切换某一行的选中状态，如果使用了第二个参数，则是设置这一行选中与否（selected 为 true 则选中）")]),e("td",[t._v("row, selected")])]),e("tr",[e("td",[t._v("toggleAllSelection")]),e("td",[t._v("用于多选表格，切换所有行的选中状态")]),e("td",[t._v("-")])]),e("tr",[e("td",[t._v("toggleRowExpansion")]),e("td",[t._v("用于可展开表格与树形表格，切换某一行的展开状态，如果使用了第二个参数，则是设置这一行展开与否（expanded 为 true 则展开）")]),e("td",[t._v("row, expanded")])]),e("tr",[e("td",[t._v("setCurrentRow")]),e("td",[t._v("用于单选表格，设定某一行为选中行，如果调用时不加参数，则会取消目前高亮行的选中状态。")]),e("td",[t._v("row")])]),e("tr",[e("td",[t._v("clearSort")]),e("td",[t._v("用于清空排序条件，数据会恢复成未排序的状态")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("clearFilter")]),e("td",[t._v("不传入参数时用于清空所有过滤条件，数据会恢复成未过滤的状态，也可传入由columnKey组成的数组以清除指定列的过滤条件")]),e("td",[t._v("columnKey")])]),e("tr",[e("td",[t._v("doLayout")]),e("td",[t._v("对 Table 进行重新布局。当 Table 或其祖先元素由隐藏切换为显示时，可能需要调用此方法")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort")]),e("td",[t._v("手动对 Table 进行排序。参数 "),e("code",[t._v("prop")]),t._v(" 属性指定排序列， "),e("code",[t._v("order")]),t._v(" 指定排序顺序。")]),e("td",[t._v("prop: string, order: string")])])])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("append")]),e("td",[t._v("插入至表格最后一行之后的内容，如果需要对表格的内容进行无限滚动操作，可能需要用到这个 slot。若表格有合计行，该 slot 会位于合计行之上。")])])])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),e("th",[t._v("说明")]),e("th",[t._v("类型")]),e("th",[t._v("可选值")]),e("th",[t._v("默认值")])])]),e("tbody",[e("tr",[e("td",[t._v("type")]),e("td",[t._v("对应列的类型。如果设置了 "),e("code",[t._v("selection")]),t._v(" 则显示多选框；如果设置了 "),e("code",[t._v("index")]),t._v(" 则显示该行的索引（从 1 开始计算）；如果设置了 "),e("code",[t._v("expand")]),t._v(" 则显示为一个可展开的按钮")]),e("td",[t._v("string")]),e("td",[t._v("selection/index/expand")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("index")]),e("td",[t._v("如果设置了 "),e("code",[t._v("type=index")]),t._v(" ，可以通过传递 "),e("code",[t._v("index")]),t._v(" 属性来自定义索引")]),e("td",[t._v("number, Function(index)")]),e("td",[t._v("-")]),e("td",[t._v("-")])]),e("tr",[e("td",[t._v("column-key")]),e("td",[t._v("column 的 key，如果需要使用 filter-change 事件，则需要此属性标识是哪个 column 的筛选条件")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("label")]),e("td",[t._v("显示的标题")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("prop")]),e("td",[t._v("对应列内容的字段名，也可以使用 property 属性")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("width")]),e("td",[t._v("对应列的宽度")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("min-width")]),e("td",[t._v("对应列的最小宽度，与 width 的区别是 width 是固定的，min-width 会把剩余宽度按比例分配给设置了 min-width 的列")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("fixed")]),e("td",[t._v("列是否固定在左侧或者右侧，true 表示固定在左侧")]),e("td",[t._v("string, boolean")]),e("td",[t._v("true, left, right")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("render-header")]),e("td",[t._v("列标题 Label 区域渲染使用的 Function")]),e("td",[t._v("Function(h, { column, $index })")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sortable")]),e("td",[t._v("对应列是否可以排序，如果设置为 'custom'，则代表用户希望远程排序，需要监听 Table 的 sort-change 事件")]),e("td",[t._v("boolean, string")]),e("td",[t._v("true, false, 'custom'")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("sort-method")]),e("td",[t._v("对数据进行排序的时候使用的方法，仅当 sortable 设置为 true 的时候有效，需返回一个数字，和 Array.sort 表现一致")]),e("td",[t._v("Function(a, b)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort-by")]),e("td",[t._v("指定数据按照哪个属性进行排序，仅当 sortable 设置为 true 且没有设置 sort-method 的时候有效。如果 sort-by 为数组，则先按照第 1 个属性排序，如果第 1 个相等，再按照第 2 个排序，以此类推")]),e("td",[t._v("String/Array/Function(row, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("sort-orders")]),e("td",[t._v("数据在排序时所使用排序策略的轮转顺序，仅当 sortable 为 true 时有效。需传入一个数组，随着用户点击表头，该列依次按照数组中元素的顺序进行排序")]),e("td",[t._v("array")]),e("td",[t._v("数组中的元素需为以下三者之一： "),e("code",[t._v("ascending")]),t._v(" 表示升序， "),e("code",[t._v("descending")]),t._v(" 表示降序， "),e("code",[t._v("null")]),t._v(" 表示还原为原始顺序")]),e("td",[t._v("['ascending', 'descending', null]")])]),e("tr",[e("td",[t._v("resizable")]),e("td",[t._v("对应列是否可以通过拖动改变宽度（需要在 el-table 上设置 border 属性为真）")]),e("td",[t._v("boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("formatter")]),e("td",[t._v("用来格式化内容")]),e("td",[t._v("Function(row, column, cellValue, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("show-overflow-tooltip")]),e("td",[t._v("当内容过长被隐藏时显示 tooltip")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("align")]),e("td",[t._v("对齐方式")]),e("td",[t._v("String")]),e("td",[t._v("left/center/right")]),e("td",[t._v("left")])]),e("tr",[e("td",[t._v("header-align")]),e("td",[t._v("表头对齐方式，若不设置该项，则使用表格的对齐方式")]),e("td",[t._v("String")]),e("td",[t._v("left/center/right")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("class-name")]),e("td",[t._v("列的 className")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("label-class-name")]),e("td",[t._v("当前列标题的自定义类名")]),e("td",[t._v("string")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("selectable")]),e("td",[t._v("仅对 type=selection 的列有效，类型为 Function，Function 的返回值用来决定这一行的 CheckBox 是否可以勾选")]),e("td",[t._v("Function(row, index)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("reserve-selection")]),e("td",[t._v("仅对 type=selection 的列有效，类型为 Boolean，为 true 则会在数据更新之后保留之前选中的数据（需指定 "),e("code",[t._v("row-key")]),t._v(" ）")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("false")])]),e("tr",[e("td",[t._v("filters")]),e("td",[t._v("数据过滤的选项，数组格式，数组中的元素需要有 text 和 value 属性。")]),e("td",[t._v("Array[{ text, value }]")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filter-placement")]),e("td",[t._v("过滤弹出框的定位")]),e("td",[t._v("String")]),e("td",[t._v("与 Tooltip 的 "),e("code",[t._v("placement")]),t._v(" 属性相同")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filter-multiple")]),e("td",[t._v("数据过滤的选项是否多选")]),e("td",[t._v("Boolean")]),e("td",[t._v("—")]),e("td",[t._v("true")])]),e("tr",[e("td",[t._v("filter-method")]),e("td",[t._v("数据过滤使用的方法，如果是多选的筛选项，对每一条数据会执行多次，任意一次返回 true 就会显示。")]),e("td",[t._v("Function(value, row, column)")]),e("td",[t._v("—")]),e("td",[t._v("—")])]),e("tr",[e("td",[t._v("filtered-value")]),e("td",[t._v("选中的数据过滤项，如果需要自定义表头过滤的渲染方式，可能会需要此属性。")]),e("td",[t._v("Array")]),e("td",[t._v("—")]),e("td",[t._v("—")])])])])},function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),e("th",[t._v("说明")])])]),e("tbody",[e("tr",[e("td",[t._v("—")]),e("td",[t._v("自定义列的内容，参数为 { row, column, $index }")])]),e("tr",[e("td",[t._v("header")]),e("td",[t._v("自定义表头的内容. 参数为 { column, $index }")])])])])}],!1,null,null,null);e.default=a.exports}}]);