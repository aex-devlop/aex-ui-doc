(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{291:function(e,t,a){"use strict";a.r(t);var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a,r=arguments[t];for(a in r)Object.prototype.hasOwnProperty.call(r,a)&&(e[a]=r[a])}return e},r={name:"component-doc",components:{"aex-demo0":r({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[e("aex-row",{staticStyle:{marginBottom:"14px"}},[e("aex-col",{attrs:{span:8}},[e("aex-radio-group",{attrs:{size:"small"},model:{value:t.labelPosition,callback:function(e){t.labelPosition=e},expression:"labelPosition"}},[e("aex-radio-button",{attrs:{label:"left"}},[t._v("左对齐")]),t._v(" "),e("aex-radio-button",{attrs:{label:"right"}},[t._v("右对齐")]),t._v(" "),e("aex-radio-button",{attrs:{label:"top"}},[t._v("顶部对齐")])],1)],1),t._v(" "),e("aex-col",{attrs:{span:8}},[e("aex-radio-group",{attrs:{size:"small"},model:{value:t.formSize,callback:function(e){t.formSize=e},expression:"formSize"}},[e("aex-radio-button",{attrs:{label:""}},[t._v("默认")]),t._v(" "),e("aex-radio-button",{attrs:{label:"medium"}},[t._v("medium")]),t._v(" "),e("aex-radio-button",{attrs:{label:"small"}},[t._v("small")]),t._v(" "),e("aex-radio-button",{attrs:{label:"mini"}},[t._v("mini")])],1)],1)],1),t._v(" "),e("div",{staticStyle:{width:"400px"}},[e("aex-form",{ref:"form",attrs:{"label-position":t.labelPosition,size:t.formSize,model:t.form,"label-width":"80px"}},[e("aex-form-item",{attrs:{label:"输入框"}},[e("aex-input",{model:{value:t.form.input,callback:function(e){t.$set(t.form,"input",e)},expression:"form.input"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"下拉选择"}},[e("aex-select",{attrs:{placeholder:"请选择选择"},model:{value:t.form.select,callback:function(e){t.$set(t.form,"select",e)},expression:"form.select"}},[e("aex-option",{attrs:{label:"选择1",value:"选择1"}}),t._v(" "),e("aex-option",{attrs:{label:"选择2",value:"选择2"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"日期时间"}},[e("aex-row",[e("aex-col",{attrs:{span:11}},[e("aex-date-picker",{staticStyle:{width:"100%"},attrs:{type:"date",placeholder:"选择日期"},model:{value:t.form.date1,callback:function(e){t.$set(t.form,"date1",e)},expression:"form.date1"}})],1),t._v(" "),e("aex-col",{staticClass:"line",staticStyle:{textAlign:"center"},attrs:{span:2}},[t._v("--")]),t._v(" "),e("aex-col",{attrs:{span:11}},[e("aex-time-picker",{staticStyle:{width:"100%"},attrs:{placeholder:"选择时间"},model:{value:t.form.date2,callback:function(e){t.$set(t.form,"date2",e)},expression:"form.date2"}})],1)],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"切换滑块"}},[e("aex-switch",{model:{value:t.form.switch,callback:function(e){t.$set(t.form,"switch",e)},expression:"form.switch"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"多选框"}},[e("aex-checkbox-group",{model:{value:t.form.checks,callback:function(e){t.$set(t.form,"checks",e)},expression:"form.checks"}},[e("aex-checkbox",{attrs:{label:"多选框1",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框2",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框3",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框4",name:"checks"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"单选"}},[e("aex-radio-group",{model:{value:t.form.radio,callback:function(e){t.$set(t.form,"radio",e)},expression:"form.radio"}},[e("aex-radio",{attrs:{label:"单选1"}}),t._v(" "),e("aex-radio",{attrs:{label:"单选2"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"多文字"}},[e("aex-input",{attrs:{type:"textarea"},model:{value:t.form.textarea,callback:function(e){t.$set(t.form,"textarea",e)},expression:"form.textarea"}})],1),t._v(" "),e("aex-form-item",[e("aex-button",{attrs:{type:"primary"},on:{click:t.onSubmit}},[t._v("提交")]),t._v(" "),e("aex-button",[t._v("取消")])],1)],1)],1)],1)},staticRenderFns:[]},{data:function(){return{labelPosition:"left",formSize:"",form:{input:"",select:"",date1:"",date2:"",switch:!1,checks:[],radio:"",textarea:""}}},methods:{onSubmit:function(){console.log("表单提交数据：",this.form)}}}),"aex-demo1":r({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[e("aex-form",{staticClass:"demo-form-inline",attrs:{inline:"",model:t.form}},[e("aex-form-item",{attrs:{label:"输入框"}},[e("aex-input",{attrs:{clearable:""},model:{value:t.form.input,callback:function(e){t.$set(t.form,"input",e)},expression:"form.input"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"下拉选择"}},[e("aex-select",{attrs:{placeholder:"请选择选择",clearable:""},model:{value:t.form.select,callback:function(e){t.$set(t.form,"select",e)},expression:"form.select"}},[e("aex-option",{attrs:{label:"选择1",value:"选择1"}}),t._v(" "),e("aex-option",{attrs:{label:"选择2",value:"选择2"}})],1)],1),t._v(" "),e("aex-form-item",[e("aex-button",{attrs:{type:"primary"},on:{click:t.onSubmit}},[t._v("查询")])],1)],1)],1)},staticRenderFns:[]},{data:function(){return{form:{input:"",select:""}}},methods:{onSubmit:function(){console.log("表单提交数据：",this.form)}}}),"aex-demo2":r({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[e("div",{staticStyle:{width:"400px"}},[e("aex-form",{ref:"form",attrs:{model:t.form,rules:t.rules,"label-width":"100px"}},[e("aex-form-item",{attrs:{label:"输入框",prop:"input"}},[e("aex-input",{model:{value:t.form.input,callback:function(e){t.$set(t.form,"input",e)},expression:"form.input"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"下拉选择",prop:"select"}},[e("aex-select",{attrs:{placeholder:"请选择选择"},model:{value:t.form.select,callback:function(e){t.$set(t.form,"select",e)},expression:"form.select"}},[e("aex-option",{attrs:{label:"选择1",value:"选择1"}}),t._v(" "),e("aex-option",{attrs:{label:"选择2",value:"选择2"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"日期时间",required:""}},[e("aex-row",[e("aex-col",{attrs:{span:11}},[e("aex-form-item",{attrs:{prop:"date1"}},[e("aex-date-picker",{staticStyle:{width:"100%"},attrs:{type:"date",placeholder:"选择日期"},model:{value:t.form.date1,callback:function(e){t.$set(t.form,"date1",e)},expression:"form.date1"}})],1)],1),t._v(" "),e("aex-col",{staticClass:"line",staticStyle:{textAlign:"center"},attrs:{span:2}},[t._v("--")]),t._v(" "),e("aex-col",{attrs:{span:11}},[e("aex-form-item",{attrs:{prop:"date2"}},[e("aex-time-picker",{staticStyle:{width:"100%"},attrs:{placeholder:"选择时间"},model:{value:t.form.date2,callback:function(e){t.$set(t.form,"date2",e)},expression:"form.date2"}})],1)],1)],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"切换滑块"}},[e("aex-switch",{model:{value:t.form.switch,callback:function(e){t.$set(t.form,"switch",e)},expression:"form.switch"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"多选框",prop:"checks"}},[e("aex-checkbox-group",{model:{value:t.form.checks,callback:function(e){t.$set(t.form,"checks",e)},expression:"form.checks"}},[e("aex-checkbox",{attrs:{label:"多选框1",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框2",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框3",name:"checks"}}),t._v(" "),e("aex-checkbox",{attrs:{label:"多选框4",name:"checks"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"单选",prop:"radio"}},[e("aex-radio-group",{model:{value:t.form.radio,callback:function(e){t.$set(t.form,"radio",e)},expression:"form.radio"}},[e("aex-radio",{attrs:{label:"单选1"}}),t._v(" "),e("aex-radio",{attrs:{label:"单选2"}})],1)],1),t._v(" "),e("aex-form-item",{attrs:{label:"多文字",prop:"textarea"}},[e("aex-input",{attrs:{type:"textarea"},model:{value:t.form.textarea,callback:function(e){t.$set(t.form,"textarea",e)},expression:"form.textarea"}})],1),t._v(" "),e("aex-form-item",[e("aex-button",{attrs:{type:"primary"},on:{click:t.onSubmit}},[t._v("提交")]),t._v(" "),e("aex-button",{on:{click:t.resetForm}},[t._v("重置")])],1)],1)],1)])},staticRenderFns:[]},{data:function(){return{form:{input:"",select:"",date1:"",date2:"",switch:!1,checks:[],radio:"",textarea:""},rules:{input:[{required:!0,message:"内容不能为空！",trigger:"blur"},{min:3,max:5,message:"长度在 3 到 5 个字符",trigger:"blur"}],select:[{required:!0,message:"内容不能为空！",trigger:"blur"}],date1:[{type:"date",required:!0,message:"请选择日期",trigger:"change"}],date2:[{type:"date",required:!0,message:"请选择时间",trigger:"change"}],checks:[{type:"array",required:!0,message:"内容不能为空！",trigger:"change"}],radio:[{required:!0,message:"内容不能为空！",trigger:"change"}],textarea:[{required:!0,message:"内容不能为空！",trigger:"blur"}]}}},methods:{onSubmit:function(){this.$refs.form.validate(function(e){if(!e)return!1})},resetForm:function(e){this.$refs.form.resetFields()}}}),"aex-demo3":r({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[e("aex-form",{ref:"ruleForm",staticStyle:{width:"400px"},attrs:{model:t.ruleForm,"status-icon":"",rules:t.rules,"label-width":"100px"}},[e("aex-form-item",{attrs:{label:"密码",prop:"pass"}},[e("aex-input",{attrs:{type:"password",autocomplete:"off"},model:{value:t.ruleForm.pass,callback:function(e){t.$set(t.ruleForm,"pass",e)},expression:"ruleForm.pass"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"确认密码",prop:"checkPass"}},[e("aex-input",{attrs:{type:"password",autocomplete:"off"},model:{value:t.ruleForm.checkPass,callback:function(e){t.$set(t.ruleForm,"checkPass",e)},expression:"ruleForm.checkPass"}})],1),t._v(" "),e("aex-form-item",{attrs:{label:"年龄",prop:"age"}},[e("aex-input",{model:{value:t.ruleForm.age,callback:function(e){t.$set(t.ruleForm,"age",t._n(e))},expression:"ruleForm.age"}})],1),t._v(" "),e("aex-form-item",[e("aex-button",{attrs:{type:"primary"},on:{click:function(e){t.submitForm("ruleForm")}}},[t._v("提交")]),t._v(" "),e("aex-button",{on:{click:function(e){t.resetForm("ruleForm")}}},[t._v("重置")])],1)],1)],1)},staticRenderFns:[]},{data:function(){var r=this;return{ruleForm:{pass:"",checkPass:"",age:""},rules:{pass:[{validator:function(e,t,a){""===t?a(new Error("请输入密码")):(""!==r.ruleForm.checkPass&&r.$refs.ruleForm.validateField("checkPass"),a())},trigger:"blur"}],checkPass:[{validator:function(e,t,a){""===t?a(new Error("请再次输入密码")):t!==r.ruleForm.pass?a(new Error("两次输入密码不一致!")):a()},trigger:"blur"}],age:[{validator:function(e,t,a){if(!t)return a(new Error("年龄不能为空"));setTimeout(function(){Number.isInteger(t)?t<18?a(new Error("必须年满18岁")):a():a(new Error("请输入数字值"))},1e3)},trigger:"blur"}]}}},methods:{submitForm:function(e){this.$refs[e].validate(function(e){if(!e)return!1})},resetForm:function(e){this.$refs[e].resetFields()}}}),"aex-demo4":r({render:function(){var t=this,e=t.$createElement,e=t._self._c||e;return e("div",[e("aex-form",{ref:"numberValidateForm",staticStyle:{width:"400px"},attrs:{model:t.numberValidateForm,"label-width":"100px"}},[e("aex-form-item",{attrs:{label:"年龄",prop:"age",rules:[{required:!0,message:"年龄不能为空"},{type:"number",message:"年龄必须为数字值"}]}},[e("aex-input",{attrs:{type:"age",autocomplete:"off"},model:{value:t.numberValidateForm.age,callback:function(e){t.$set(t.numberValidateForm,"age",t._n(e))},expression:"numberValidateForm.age"}})],1),t._v(" "),e("aex-form-item",[e("aex-button",{attrs:{type:"primary"},on:{click:function(e){t.submitForm("numberValidateForm")}}},[t._v("提交")]),t._v(" "),e("aex-button",{on:{click:function(e){t.resetForm("numberValidateForm")}}},[t._v("重置")])],1)],1)],1)},staticRenderFns:[]},{data:function(){return{numberValidateForm:{age:""}}},methods:{submitForm:function(e){var t=this;this.$refs[e].validate(function(e){return e?void t.$message.success("验证通过！"):(t.$message.error("验证错误！"),!1)})},resetForm:function(e){this.$refs[e].resetFields()}}}),"aex-demo5":r({render:function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("div",[r("aex-form",{ref:"dynamicValidateForm",staticStyle:{width:"600px"},attrs:{model:a.dynamicValidateForm,"label-width":"100px"}},[r("aex-form-item",{attrs:{prop:"email",label:"邮箱",rules:[{required:!0,message:"请输入邮箱地址",trigger:"blur"},{type:"email",message:"请输入正确的邮箱地址",trigger:["blur","change"]}]}},[r("aex-input",{model:{value:a.dynamicValidateForm.email,callback:function(e){a.$set(a.dynamicValidateForm,"email",e)},expression:"dynamicValidateForm.email"}})],1),a._v(" "),a._l(a.dynamicValidateForm.domains,function(t,e){return r("aex-form-item",{key:t.key,attrs:{label:"域名"+e,prop:"domains."+e+".value",rules:{required:!0,message:"域名不能为空",trigger:"blur"}}},[r("aex-col",{attrs:{span:18}},[r("aex-input",{model:{value:t.value,callback:function(e){a.$set(t,"value",e)},expression:"domain.value"}})],1),a._v(" "),r("aex-col",{attrs:{span:6,align:"right"}},[r("aex-button",{attrs:{type:"outline",size:"mini"},on:{click:function(e){a.removeDomain(t)}}},[a._v("删除")])],1)],1)}),a._v(" "),r("aex-form-item",[r("aex-button",{attrs:{type:"primary"},on:{click:function(e){a.submitForm("dynamicValidateForm")}}},[a._v("提交")]),a._v(" "),r("aex-button",{attrs:{icon:"aex-icon-plus"},on:{click:a.addDomain}},[a._v("新增域名")]),a._v(" "),r("aex-button",{on:{click:function(e){a.resetForm("dynamicValidateForm")}}},[a._v("重置")])],1)],2)],1)},staticRenderFns:[]},{data:function(){return{dynamicValidateForm:{domains:[{value:""}],email:""}}},methods:{submitForm:function(e){this.$refs[e].validate(function(e){return e?void alert("submit!"):(console.log("error submit!!"),!1)})},resetForm:function(e){this.$refs[e].resetFields()},removeDomain:function(e){e=this.dynamicValidateForm.domains.indexOf(e);-1!==e&&this.dynamicValidateForm.domains.splice(e,1)},addDomain:function(){this.dynamicValidateForm.domains.push({value:"",key:Date.now()})}}})}},a=a(1),r=Object(a.a)(r,function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("section",{staticClass:"content aex-doc"},[t("h1",[e._v("Form 表单")]),t("p",[e._v("由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据")]),t("h3",[e._v("按需引入")]),e._m(0),t("h3",[e._v("基础表单")]),e._m(1),t("demo-block",[t("template",{slot:"source"},[t("aex-demo0")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('    <aex-row style=\'marginBottom:14px\'>\n        <aex-col :span=\'8\'>\n            <aex-radio-group v-model="labelPosition" size="small">\n                <aex-radio-button label="left">左对齐</aex-radio-button>\n                <aex-radio-button label="right">右对齐</aex-radio-button>\n                <aex-radio-button label="top">顶部对齐</aex-radio-button>\n            </aex-radio-group>\n        </aex-col>\n        <aex-col :span=\'8\'>\n            <aex-radio-group v-model="formSize" size="small">\n                <aex-radio-button label="">默认</aex-radio-button>\n                <aex-radio-button label="medium">medium</aex-radio-button>\n                <aex-radio-button label="small">small</aex-radio-button>\n                <aex-radio-button label="mini">mini</aex-radio-button>\n            </aex-radio-group>\n        </aex-col>\n    </aex-row>\n    <div style=\'width:400px\'>\n        <aex-form ref="form" :label-position="labelPosition" :size=\'formSize\' :model="form" label-width="80px">\n            <aex-form-item label="输入框">\n                <aex-input v-model="form.input"></aex-input>\n            </aex-form-item>\n            <aex-form-item label="下拉选择">\n                <aex-select v-model="form.select" placeholder="请选择选择">\n                    <aex-option label="选择1" value="选择1"></aex-option>\n                    <aex-option label="选择2" value="选择2"></aex-option>\n                </aex-select>\n            </aex-form-item>\n            <aex-form-item label="日期时间">\n                <aex-row>\n                    <aex-col :span="11">\n                        <aex-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></aex-date-picker>\n                    </aex-col>\n                    <aex-col class="line" :span="2" style=\'textAlign:center\'>--</aex-col>\n                    <aex-col :span="11">\n                        <aex-time-picker placeholder="选择时间" v-model="form.date2" style="width: 100%;"></aex-time-picker>\n                    </aex-col>\n                </aex-row>\n            </aex-form-item>\n            <aex-form-item label="切换滑块">\n                <aex-switch v-model="form.switch"></aex-switch>\n            </aex-form-item>\n            <aex-form-item label="多选框">\n                <aex-checkbox-group v-model="form.checks">\n                    <aex-checkbox label="多选框1" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框2" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框3" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框4" name="checks"></aex-checkbox>\n                </aex-checkbox-group>\n            </aex-form-item>\n            <aex-form-item label="单选">\n                <aex-radio-group v-model="form.radio">\n                    <aex-radio label="单选1"></aex-radio>\n                    <aex-radio label="单选2"></aex-radio>\n                </aex-radio-group>\n            </aex-form-item>\n            <aex-form-item label="多文字">\n                <aex-input type="textarea" v-model="form.textarea"></aex-input>\n            </aex-form-item>\n            <aex-form-item>\n                <aex-button type="primary" @click="onSubmit">提交</aex-button>\n                <aex-button>取消</aex-button>\n            </aex-form-item>\n        </aex-form>\n    </div>\n    <script>\n        export default {\n            data() {\n                return {\n                    labelPosition: \'left\',\n                    formSize: \'\',\n                    form: {\n                        input: \'\',\n                        select: \'\',\n                        date1: \'\',\n                        date2: \'\',\n                        switch: false,\n                        checks: [],\n                        radio: \'\',\n                        textarea: \'\'\n                    }\n                }\n            },\n            methods: {\n                onSubmit() {\n                    console.log(\'表单提交数据：\', this.form);\n                }\n            }\n        }\n    <\/script>\n')])])])],2),t("h3",[e._v("行内表单")]),e._m(2),t("demo-block",[t("template",{slot:"source"},[t("aex-demo1")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<aex-form inline :model="form" class="demo-form-inline">\n    <aex-form-item label="输入框">\n        <aex-input v-model="form.input" clearable></aex-input>\n    </aex-form-item>\n    <aex-form-item label="下拉选择">\n        <aex-select v-model="form.select" placeholder="请选择选择" clearable>\n            <aex-option label="选择1" value="选择1"></aex-option>\n            <aex-option label="选择2" value="选择2"></aex-option>\n        </aex-select>\n    </aex-form-item>\n    <aex-form-item>\n        <aex-button type="primary" @click="onSubmit">查询</aex-button>\n    </aex-form-item>\n</aex-form>\n<script>\n    export default {\n        data() {\n            return {\n                form: {\n                    input: \'\',\n                    select: \'\'\n                }\n            }\n        },\n        methods: {\n            onSubmit() {\n                console.log(\'表单提交数据：\', this.form);\n            }\n        }\n    }\n<\/script>\n')])])])],2),t("h3",[e._v("表单验证")]),e._m(3),t("demo-block",[t("template",{slot:"source"},[t("aex-demo2")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('    <div style=\'width:400px\'>\n        <aex-form ref="form" :model="form" :rules="rules" label-width="100px">\n            <aex-form-item label="输入框" prop="input">\n                <aex-input v-model="form.input"></aex-input>\n            </aex-form-item>\n            <aex-form-item label="下拉选择" prop="select">\n                <aex-select v-model="form.select" placeholder="请选择选择">\n                    <aex-option label="选择1" value="选择1"></aex-option>\n                    <aex-option label="选择2" value="选择2"></aex-option>\n                </aex-select>\n            </aex-form-item>\n            <aex-form-item label="日期时间" required>\n                <aex-row>\n                    <aex-col :span="11">\n                        <aex-form-item prop="date1">\n                            <aex-date-picker type="date" placeholder="选择日期" v-model="form.date1" style="width: 100%;"></aex-date-picker>\n                        </aex-form-item>\n                    </aex-col>\n                    <aex-col class="line" :span="2" style=\'textAlign:center\'>--</aex-col>\n                    <aex-col :span="11">\n                        <aex-form-item prop="date2">\n                            <aex-time-picker placeholder="选择时间" v-model="form.date2" style="width: 100%;"></aex-time-picker>\n                        </aex-form-item>\n                    </aex-col>\n                </aex-row>\n            </aex-form-item>\n            <aex-form-item label="切换滑块">\n                <aex-switch v-model="form.switch"></aex-switch>\n            </aex-form-item>\n            <aex-form-item label="多选框" prop="checks">\n                <aex-checkbox-group v-model="form.checks">\n                    <aex-checkbox label="多选框1" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框2" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框3" name="checks"></aex-checkbox>\n                    <aex-checkbox label="多选框4" name="checks"></aex-checkbox>\n                </aex-checkbox-group>\n            </aex-form-item>\n            <aex-form-item label="单选" prop="radio">\n                <aex-radio-group v-model="form.radio">\n                    <aex-radio label="单选1"></aex-radio>\n                    <aex-radio label="单选2"></aex-radio>\n                </aex-radio-group>\n            </aex-form-item>\n            <aex-form-item label="多文字" prop="textarea">\n                <aex-input type="textarea" v-model="form.textarea"></aex-input>\n            </aex-form-item>\n            <aex-form-item>\n                <aex-button type="primary" @click="onSubmit">提交</aex-button>\n                <aex-button @click=\'resetForm\'>重置</aex-button>\n            </aex-form-item>\n        </aex-form>\n    </div>\n    <script>\n        export default {\n            data() {\n                return {\n                    form: {\n                        input: \'\',\n                        select: \'\',\n                        date1: \'\',\n                        date2: \'\',\n                        switch: false,\n                        checks: [],\n                        radio: \'\',\n                        textarea: \'\'\n                    },\n                    rules: {\n                        input: [{\n                                required: true,\n                                message: \'内容不能为空！\',\n                                trigger: \'blur\'\n                            },\n                            {\n                                min: 3,\n                                max: 5,\n                                message: \'长度在 3 到 5 个字符\',\n                                trigger: \'blur\'\n                            }\n                        ],\n                        select: [{\n                            required: true,\n                            message: \'内容不能为空！\',\n                            trigger: \'blur\'\n                        }],\n                        date1: [{\n                            type: \'date\',\n                            required: true,\n                            message: \'请选择日期\',\n                            trigger: \'change\'\n                        }],\n                        date2: [{\n                            type: \'date\',\n                            required: true,\n                            message: \'请选择时间\',\n                            trigger: \'change\'\n                        }],\n                        checks: [{\n                            type: \'array\',\n                            required: true,\n                            message: \'内容不能为空！\',\n                            trigger: \'change\'\n                        }],\n                        radio: [{\n                            required: true,\n                            message: \'内容不能为空！\',\n                            trigger: \'change\'\n                        }],\n                        textarea: [{\n                            required: true,\n                            message: \'内容不能为空！\',\n                            trigger: \'blur\'\n                        }]\n                    }\n                };\n            },\n            methods: {\n                onSubmit() {\n                    this.$refs.form.validate((valid) => {\n                        if (valid) {\n                            // this.$message.success(\'验证通过！\')\n                        } else {\n                            // this.$message.error(\'验证错误！\')\n                            return false;\n                        }\n                    });\n                },\n                resetForm(formName) {\n                    this.$refs.form.resetFields();\n                }\n            }\n        }\n    <\/script>\n')])])])],2),t("h3",[e._v("自定义校验规则")]),e._m(4),t("demo-block",[t("template",{slot:"source"},[t("aex-demo3")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v("<aex-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" style='width:400px'>\n    <aex-form-item label=\"密码\" prop=\"pass\">\n        <aex-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></aex-input>\n    </aex-form-item>\n    <aex-form-item label=\"确认密码\" prop=\"checkPass\">\n        <aex-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></aex-input>\n    </aex-form-item>\n    <aex-form-item label=\"年龄\" prop=\"age\">\n        <aex-input v-model.number=\"ruleForm.age\"></aex-input>\n    </aex-form-item>\n    <aex-form-item>\n        <aex-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</aex-button>\n        <aex-button @click=\"resetForm('ruleForm')\">重置</aex-button>\n    </aex-form-item>\n</aex-form>\n<script>\n    export default {\n        data() {\n            var checkAge = (rule, value, callback) => {\n                if (!value) {\n                    return callback(new Error('年龄不能为空'));\n                }\n                setTimeout(() => {\n                    if (!Number.isInteger(value)) {\n                        callback(new Error('请输入数字值'));\n                    } else {\n                        if (value < 18) {\n                            callback(new Error('必须年满18岁'));\n                        } else {\n                            callback();\n                        }\n                    }\n                }, 1000);\n            };\n            var validatePass = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请输入密码'));\n                } else {\n                    if (this.ruleForm.checkPass !== '') {\n                        this.$refs.ruleForm.validateField('checkPass');\n                    }\n                    callback();\n                }\n            };\n            var validatePass2 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            var validatePass3 = (rule, value, callback) => {\n                if (value === '') {\n                    callback(new Error('请再次输入密码'));\n                } else if (value !== this.ruleForm.pass) {\n                    callback(new Error('两次输入密码不一致!'));\n                } else {\n                    callback();\n                }\n            };\n            return {\n                ruleForm: {\n                    pass: '',\n                    checkPass: '',\n                    age: ''\n                },\n                rules: {\n                    pass: [{\n                        validator: validatePass,\n                        trigger: 'blur'\n                    }],\n                    checkPass: [{\n                        validator: validatePass2,\n                        trigger: 'blur'\n                    }],\n                    age: [{\n                        validator: checkAge,\n                        trigger: 'blur'\n                    }]\n                }\n            };\n        },\n        methods: {\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        // this.$message.success('验证通过！')\n                    } else {\n                        // this.$message.error('验证错误！')\n                        return false;\n                    }\n                });\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            }\n        }\n    }\n<\/script>\n")])])])],2),t("h3",[e._v("数字类型验证")]),e._m(5),t("demo-block",[t("template",{slot:"source"},[t("aex-demo4")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v('<aex-form :model="numberValidateForm" ref="numberValidateForm" label-width="100px" style=\'width:400px\'>\n    <aex-form-item label="年龄" prop="age" :rules="[\n      { required: true, message: \'年龄不能为空\'},\n      { type: \'number\', message: \'年龄必须为数字值\'}\n    ]">\n        <aex-input type="age" v-model.number="numberValidateForm.age" autocomplete="off"></aex-input>\n    </aex-form-item>\n    <aex-form-item>\n        <aex-button type="primary" @click="submitForm(\'numberValidateForm\')">提交</aex-button>\n        <aex-button @click="resetForm(\'numberValidateForm\')">重置</aex-button>\n    </aex-form-item>\n</aex-form>\n<script>\n    export default {\n        data() {\n            return {\n                numberValidateForm: {\n                    age: \'\'\n                },\n\n            };\n        },\n        methods: {\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        this.$message.success(\'验证通过！\')\n                    } else {\n                        this.$message.error(\'验证错误！\')\n                        return false;\n                    }\n                });\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            }\n        }\n    }\n<\/script>\n')])])])],2),t("h3",[e._v("动态增减表单项")]),t("demo-block",[t("template",{slot:"source"},[t("aex-demo5")],1),t("template",{slot:"highlight"},[t("pre",{pre:!0},[t("code",{pre:!0,attrs:{class:"html"}},[e._v("<aex-form :model=\"dynamicValidateForm\" ref=\"dynamicValidateForm\" label-width=\"100px\" style='width:600px'>\n    <aex-form-item prop=\"email\" label=\"邮箱\" :rules=\"[\n      { required: true, message: '请输入邮箱地址', trigger: 'blur' },\n      { type: 'email', message: '请输入正确的邮箱地址', trigger: ['blur', 'change'] }\n    ]\">\n        <aex-input v-model=\"dynamicValidateForm.email\"></aex-input>\n    </aex-form-item>\n    <aex-form-item v-for=\"(domain, index) in dynamicValidateForm.domains\" :label=\"'域名' + index\" :key=\"domain.key\" :prop=\"'domains.' + index + '.value'\" :rules=\"{\n      required: true, message: '域名不能为空', trigger: 'blur'\n    }\">\n        <aex-col :span='18'>\n            <aex-input v-model=\"domain.value\"></aex-input>\n        </aex-col>\n        <aex-col :span='6' align='right'>\n            <aex-button type='outline' size='mini' @click=\"removeDomain(domain)\">删除</aex-button>\n        </aex-col>\n    </aex-form-item>\n    <aex-form-item>\n        <aex-button type=\"primary\" @click=\"submitForm('dynamicValidateForm')\">提交</aex-button>\n        <aex-button icon='aex-icon-plus' @click=\"addDomain\">新增域名</aex-button>\n        <aex-button @click=\"resetForm('dynamicValidateForm')\">重置</aex-button>\n    </aex-form-item>\n</aex-form>\n<script>\n    export default {\n        data() {\n            return {\n                dynamicValidateForm: {\n                    domains: [{\n                        value: ''\n                    }],\n                    email: ''\n                }\n            };\n        },\n        methods: {\n            submitForm(formName) {\n                this.$refs[formName].validate((valid) => {\n                    if (valid) {\n                        alert('submit!');\n                    } else {\n                        console.log('error submit!!');\n                        return false;\n                    }\n                });\n            },\n            resetForm(formName) {\n                this.$refs[formName].resetFields();\n            },\n            removeDomain(item) {\n                var index = this.dynamicValidateForm.domains.indexOf(item)\n                if (index !== -1) {\n                    this.dynamicValidateForm.domains.splice(index, 1)\n                }\n            },\n            addDomain() {\n                this.dynamicValidateForm.domains.push({\n                    value: '',\n                    key: Date.now()\n                });\n            }\n        }\n    }\n<\/script>\n")])])])],2),t("h3",[e._v("Form Attributes")]),e._m(6),t("h3",[e._v("Form Methods")]),e._m(7),t("h3",[e._v("Form Events")]),e._m(8),t("h3",[e._v("Form-Item Attributes")]),e._m(9),t("h3",[e._v("Form-Item Slot")]),e._m(10),t("h3",[e._v("Form-Item Scoped Slot")]),e._m(11),t("h3",[e._v("Form-Item Methods")]),e._m(12),t("h3",[e._v("常用验证")]),e._m(13)],1)},[function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("pre",[t("code",[e._v("import { Form } from 'aex-ui';\nVue.use(Form)\n")])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("p",[e._v("在 Form 组件中，每一个表单元素都必须用 "),t("code",[e._v("Form-Item")]),e._v(" 包裹."),t("br"),t("code",[e._v("label-position")]),e._v(" 属性可以改变表单标签的对齐方式，可选值为 "),t("code",[e._v("top、left、right")]),e._v(" , 默认 "),t("code",[e._v("right")]),e._v(" , 一般情况表单的标签字符数不会相同，我们会通过 "),t("code",[e._v("label-width")]),e._v(" 设置表单标签的宽度来配合对齐的设置。"),t("br"),t("code",[e._v("size")]),e._v(" 属性可以统一改变表单内元素的尺寸, 在 "),t("code",[e._v("Form")]),e._v(" 组件上设置可以使整个表单统一改变，也可以在 "),t("code",[e._v("Form-Item")]),e._v(" 上设置改变单个组件的大小")])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("p",[e._v("当垂直方向空间受限且表单较简单时，可以在一行内放置表单。"),t("br"),e._v("\n设置 "),t("code",[e._v("inline")]),e._v(" 属性可以让表单域变为行内的表单域")])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("p",[e._v("Form 组件提供了表单验证的功能，只需要通过 "),t("code",[e._v("rules")]),e._v(" 属性传入约定的验证规则，并将 Form-Item 的 "),t("code",[e._v("prop")]),e._v(" 属性设置为需校验的字段名即可。"),t("br"),e._v("\n校验规则参见 页面底部常用验证 或"),t("a",{attrs:{href:"https://github.com/yiminghe/async-validator"}},[e._v("async-validator")])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("p",[e._v("rules 里面用 "),t("code",[e._v("validator")]),e._v(" 属性自定义验证函数, callback必须被调用，更多高级用法可参考 页面底部常用验证 或 "),t("a",{attrs:{href:"https://github.com/yiminghe/async-validator"}},[e._v("async-validator")]),e._v("。"),t("br"),t("code",[e._v("status-icon")]),e._v(" 属性为输入框添加了表示校验结果的反馈图标。")])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("p",[e._v("当需要验证的表单元素较少时， "),t("code",[e._v("rules")]),e._v(" 规则也可以直接绑定在 Form-Item 组件上, 尤其在动态增加表单而且需要验证时，比较有用，可以看下个示例【动态增减表单项】"),t("br"),e._v("\n数字类型的验证需要在 aex-input组件 "),t("code",[e._v("v-model")]),e._v(" 处加上 "),t("code",[e._v(".number")]),e._v(" 的修饰符，这是 "),t("code",[e._v("Vue")]),e._v(" 自身提供的用于将绑定值转化为 "),t("code",[e._v("number")]),e._v(" 类型的修饰符。")])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("参数")]),t("th",[e._v("说明")]),t("th",[e._v("类型")]),t("th",[e._v("可选值")]),t("th",[e._v("默认值")])])]),t("tbody",[t("tr",[t("td",[e._v("model")]),t("td",[e._v("表单数据对象")]),t("td",[e._v("object")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("rules")]),t("td",[e._v("表单验证规则")]),t("td",[e._v("object")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("inline")]),t("td",[e._v("行内表单模式")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("label-position")]),t("td",[e._v("表单域标签的位置，如果值为 left 或者 right 时，则需要设置 "),t("code",[e._v("label-width")])]),t("td",[e._v("string")]),t("td",[e._v("right/left/top")]),t("td",[e._v("right")])]),t("tr",[t("td",[e._v("label-width")]),t("td",[e._v("表单域标签的宽度，例如 '50px'。作为 Form 直接子元素的 form-item 会继承该值。支持 "),t("code",[e._v("auto")]),e._v(" 。")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("label-suffix")]),t("td",[e._v("表单域标签的后缀")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("hide-required-asterisk")]),t("td",[e._v("是否显示必填字段的标签旁边的红色星号")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("show-message")]),t("td",[e._v("是否显示校验错误信息")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("true")])]),t("tr",[t("td",[e._v("inline-message")]),t("td",[e._v("是否以行内形式展示校验信息")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("status-icon")]),t("td",[e._v("是否在输入框中显示校验结果反馈图标")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("validate-on-rule-change")]),t("td",[e._v("是否在 "),t("code",[e._v("rules")]),e._v(" 属性改变后立即触发一次验证")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("true")])]),t("tr",[t("td",[e._v("size")]),t("td",[e._v("用于控制该表单内组件的尺寸")]),t("td",[e._v("string")]),t("td",[e._v("medium / small / mini")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("disabled")]),t("td",[e._v("是否禁用该表单内的所有组件。若设置为 true，则表单内组件上的 disabled 属性不再生效")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("方法名")]),t("th",[e._v("说明")]),t("th",[e._v("参数")])])]),t("tbody",[t("tr",[t("td",[e._v("validate")]),t("td",[e._v("对整个表单进行校验的方法，参数为一个回调函数。该回调函数会在校验结束后被调用，并传入两个参数：是否校验成功和未通过校验的字段。若不传入回调函数，则会返回一个 promise")]),t("td",[e._v("Function(callback: Function(boolean, object))")])]),t("tr",[t("td",[e._v("validateField")]),t("td",[e._v("对部分表单字段进行校验的方法")]),t("td",[e._v("Function(props: array | string, callback: Function(errorMessage: string))")])]),t("tr",[t("td",[e._v("resetFields")]),t("td",[e._v("对整个表单进行重置，将所有字段值重置为初始值并移除校验结果")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("clearValidate")]),t("td",[e._v("移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果")]),t("td",[e._v("Function(props: array | string)")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("事件名称")]),t("th",[e._v("说明")]),t("th",[e._v("回调参数")])])]),t("tbody",[t("tr",[t("td",[e._v("validate")]),t("td",[e._v("任一表单项被校验后触发")]),t("td",[e._v("被校验的表单项 prop 值，校验是否通过，错误消息（如果存在）")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("参数")]),t("th",[e._v("说明")]),t("th",[e._v("类型")]),t("th",[e._v("可选值")]),t("th",[e._v("默认值")])])]),t("tbody",[t("tr",[t("td",[e._v("prop")]),t("td",[e._v("表单域 model 字段，在使用 validate、resetFields 方法的情况下，该属性是必填的")]),t("td",[e._v("string")]),t("td",[e._v("传入 Form 组件的 "),t("code",[e._v("model")]),e._v(" 中的字段")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("label")]),t("td",[e._v("标签文本")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("label-width")]),t("td",[e._v("表单域标签的的宽度，例如 '50px'。支持 "),t("code",[e._v("auto")]),e._v(" 。")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("required")]),t("td",[e._v("是否必填，如不设置，则会根据校验规则自动生成")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("rules")]),t("td",[e._v("表单验证规则")]),t("td",[e._v("object")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("error")]),t("td",[e._v("表单域验证错误信息, 设置该值会使表单验证状态变为 "),t("code",[e._v("error")]),e._v(" ，并显示该错误信息")]),t("td",[e._v("string")]),t("td",[e._v("—")]),t("td",[e._v("—")])]),t("tr",[t("td",[e._v("show-message")]),t("td",[e._v("是否显示校验错误信息")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("true")])]),t("tr",[t("td",[e._v("inline-message")]),t("td",[e._v("以行内形式展示校验信息")]),t("td",[e._v("boolean")]),t("td",[e._v("—")]),t("td",[e._v("false")])]),t("tr",[t("td",[e._v("size")]),t("td",[e._v("用于控制该表单域下组件的尺寸")]),t("td",[e._v("string")]),t("td",[e._v("medium / small / mini")]),t("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("name")]),t("th",[e._v("说明")])])]),t("tbody",[t("tr",[t("td",[e._v("—")]),t("td",[e._v("Form Item 的内容")])]),t("tr",[t("td",[e._v("label")]),t("td",[e._v("标签文本的内容")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("name")]),t("th",[e._v("说明")])])]),t("tbody",[t("tr",[t("td",[e._v("error")]),t("td",[e._v("自定义表单校验信息的显示方式，参数为 { error }")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("table",[t("thead",[t("tr",[t("th",[e._v("方法名")]),t("th",[e._v("说明")]),t("th",[e._v("参数")])])]),t("tbody",[t("tr",[t("td",[e._v("resetField")]),t("td",[e._v("对该表单项进行重置，将其值重置为初始值并移除校验结果")]),t("td",[e._v("-")])]),t("tr",[t("td",[e._v("clearValidate")]),t("td",[e._v("移除该表单项的校验结果")]),t("td",[e._v("-")])])])])},function(){var e=this,t=e.$createElement,t=e._self._c||t;return t("pre",[t("code",[e._v("type: string,number,boolean,method,regexp,integer,float,array,object,enum,date,url,hex,email,any\npattern:需要验证的正则表达式\nlen: 字符串或数组的长度验证\n\n{required: true,message: '不能为空！',trigger: 'blur'}\n{type: 'date',required: true,message: '请选择日期',trigger: 'change'}\n{type: 'email',message: 'Email格式错误',trigger: 'blur'}\n{type: 'enum', enum: ['admin', 'user', 'guest'] }\n{type: 'string', pattern: /\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/ }\n\n")])])}],!1,null,null,null);t.default=r.exports}}]);