(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{352:function(n,t,e){"use strict";e.r(t);var s=[function(){var n=this,t=n.$createElement,t=n._self._c||t;return t("section",{staticClass:"content aex-doc"},[t("h1",[n._v("序言")]),t("p",[n._v("由于 nginx 占市场 web 服务器的市场占有份额长期处于第一位，再加上它配置简单且易学，它成为最受欢迎的web服务器之一。前端部分就更简单了，配合一定的工具，你就能出色的完成常规的部署工作并惊艳你的同事。")]),t("h2",[n._v("安装 Nginx （有条件的可以用 Docker 安装镜像）")]),t("p",[n._v("https://nginx.org/en/download.html\n（没错，这个网站只是看起来破旧一些。）")]),t("p",[t("img",{attrs:{src:e(408),alt:""}})]),t("p",[n._v("然后 windows 用户下载这个链接。")]),t("p",[n._v("本地解压后用 cmd 命令行工具打开文件。然后使用以下命令：")]),t("pre",[t("code",[n._v("start nginx\n")])]),t("p",[t("img",{attrs:{src:e(409),alt:""}})]),t("p",[t("strong",[n._v("No news is good news!")]),n._v(" （没有事情发生就是好事！说明 Nginx 服务已经启动）")]),t("p",[n._v("打开 localhost 不需要端口号（因为默认是 80）")]),t("p",[t("img",{attrs:{src:e(410),alt:""}})]),t("p",[n._v("PS：如果你还在怀疑它是否已经启动？你可以在任务管理器中找到相关进程，如果 "),t("code",[n._v("nginx -s stop")]),n._v(" 命令无法关掉就用任务管理器把进程杀掉。")]),t("p",[t("img",{attrs:{src:e(411),alt:""}})]),t("h2",[n._v("了解配置（侧重前端）")]),t("p",[n._v("我们的配置是在 nginx\\conf\\nginx.conf 文件里")]),t("p",[n._v("有常见的站点名称、端口、重定向（可解决 http 请求的跨域问题）、路由拦截（解决 spa history 路由模式）")]),t("p",[n._v("PS：先给大家安利一个 nginx 配置工具网站 http://nginxconfig.io/ 这里已经准备好生产环境所需要的配置，该页面为全选项式配置。妈妈再也不用担心我记不住配置了。配置好后下载配置文件然后覆盖在 nginx\\conf 目录下即可。")]),t("h3",[n._v("1，站点名称")]),t("pre",[t("code",{staticClass:"language-http.server.server_name"},[n._v("\n")])]),t("p",[n._v("这个是 DNS 解析到 ip 并访问我们服务器上的哪个网站（其实就是"),t("strong",[n._v("域名")]),n._v("），一般我们开发环境常用 localhost 。")]),t("p",[n._v("注意：example.com 和 www.example.com 其实是两个网站。（这里初学者容易混淆，为什么我在浏览器输入 example.com 时网站会打不开，而 www.example.com 才可以。原因往往就是没有配置重定向所导致）")]),t("h3",[n._v("2，端口号")]),t("p",[t("code",[n._v("http.server.listen")])]),t("p",[n._v("常见有 80（对应 http） 、443（对应 https）")]),t("p",[n._v("PS：我们在配置 SSL/TSL 证书时一般会要做强制重定向（即： 80端口的一切请求都重定向到 443 端口。这里不再详细讲）")]),t("h3",[n._v("3，重定向")]),t("h4",[n._v("前置知识：浏览器路由模式 hash 和 history 的一些区别。")]),t("p",[n._v("首先 SPA 架构有一个非常好的体验，就是切换页面时不需要刷新页面。原理是浏览器不会向 url 中带有 ‘#’ （也就是 hash 路由模式） 后面的内容发起请求。但也引入了一些问题如：url 变得难看，没法做锚点。。。")]),t("p",[n._v("但是 history 模式需要运维的支持。否则就会如上述--浏览器会向服务器发起请求，但服务器并没有相关的资源，最后就会报 404 了。")]),t("p",[t("img",{attrs:{src:e(412),alt:""}})]),t("p",[n._v("注意：history 模式下，路由切换是通过 history.pushState() 去更新路由的，且更新后不会向服务器请求。要手动刷新页面后才会有 404 .")]),t("h4",[n._v("Nginx 重定向配置使 SPA 的 history 模式生效")]),t("p",[n._v("先上答案：")]),t("pre",[t("code",[n._v("location / {\n    # 回退指令 \n    # $uri 是一个参数例如：www.example.com\n    # 而 $uri/ 指的是一个子路由例如：www.example.com/xxx\n    # 将一切请求(例如：$uri 和 $uri/ 这类请求)都重新发到 index.html 文件下\n\ttry_files $uri $uri/ /index.html;\n}\n")])]),t("p",[t("img",{attrs:{src:e(413),alt:""}})]),t("p",[n._v("除此之外还有使用 "),t("strong",[n._v("rewrite")]),n._v(" 和 "),t("strong",[n._v("proxy_pass")]),n._v(" 指令重定向 api 请求到别的服务端以绕过"),t("strong",[n._v("跨域请求限制")])]),t("h4",[n._v("Nginx 负载均很分发请求，避开跨域请求限制")]),t("p",[n._v("一般不处理跨域限制直接访问会：")]),t("p",[t("img",{attrs:{src:e(414),alt:""}})]),t("p",[n._v("首先我们要把 http 请求和其它请求（如：静态文静）划分清楚。")]),t("p",[n._v("这里提供一种思路：如果后端 api 路由没有任何前缀，我们可以自行给 api 添加一个前缀（/api），以便 nginx 区分并转发。不需要担心会返回 404 .")]),t("p",[n._v("例子：\n将 /api/info/xxx 在 nginx 中以 /info/xxx 的形式去转发请求。")]),t("p",[n._v("相关配置：")]),t("pre",[t("code",[n._v("# 标点符号都不可以少\nlocation ^~ /api/ {\n\tproxy_pass http://www.domain.com/;\n}\n")])]),t("p",[n._v("结果如图：")]),t("p",[t("img",{attrs:{src:e(415),alt:""}})]),t("p",[n._v("切记：这里是向自己发起请求，而非向远端服务器发出请求。（这是为了满足跨域限制）")]),t("p",[n._v("最终达到跨域请求的目的。")]),t("p",[t("strong",[n._v("一个教训")]),n._v("：proxy_pass 不要代理到 https 的域名上，否则会 404 . 由于时间有限，未能查明原因。")]),t("p",[n._v("所有配置（nginx\\conf\\nginx.conf）")]),t("pre",[t("code",[n._v("\n#user  nobody;\nworker_processes  1;\n\n#error_log  logs/error.log;\n#error_log  logs/error.log  notice;\n#error_log  logs/error.log  info;\n\n#pid        logs/nginx.pid;\n\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    #log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n    #                  '$status $body_bytes_sent \"$http_referer\" '\n    #                  '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    #access_log  logs/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n\n        #access_log  logs/host.access.log  main;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n\t\t\ttry_files $uri $uri/ /index.html;\n        }\n\t\t\n\t\tlocation ^~ /api/ {\n            # 这只是一个例子，实际要换成其它的域名测试 localhost 之类就好了\n\t\t\tproxy_pass http://www.aex.com/;\t\n\t\t}\n\n        #error_page  404              /404.html;\n\n        # redirect server error pages to the static page /50x.html\n        #\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n        # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n        #\n        #location ~ \\.php$ {\n        #    proxy_pass   http://127.0.0.1;\n        #}\n\n        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n        #\n        #location ~ \\.php$ {\n        #    root           html;\n        #    fastcgi_pass   127.0.0.1:9000;\n        #    fastcgi_index  index.php;\n        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n        #    include        fastcgi_params;\n        #}\n\n        # deny access to .htaccess files, if Apache's document root\n        # concurs with nginx's one\n        #\n        #location ~ /\\.ht {\n        #    deny  all;\n        #}\n    }\n\n    # another virtual host using mix of IP-, name-, and port-based configuration\n    #\n    #server {\n    #    listen       8000;\n    #    listen       somename:8080;\n    #    server_name  somename  alias  another.alias;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n    # HTTPS server\n    #\n    #server {\n    #    listen       443 ssl;\n    #    server_name  localhost;\n\n    #    ssl_certificate      cert.pem;\n    #    ssl_certificate_key  cert.key;\n\n    #    ssl_session_cache    shared:SSL:1m;\n    #    ssl_session_timeout  5m;\n\n    #    ssl_ciphers  HIGH:!aNULL:!MD5;\n    #    ssl_prefer_server_ciphers  on;\n\n    #    location / {\n    #        root   html;\n    #        index  index.html index.htm;\n    #    }\n    #}\n\n}\n\n")])])])}],o=e(0),s=Object(o.a)({},function(){var n=this,t=n.$createElement;n._self._c;return n._m(0)},s,!1,null,null,null);t.default=s.exports},408:function(n,t,e){n.exports=e.p+"static/1.c70925d.png"},409:function(n,t,e){n.exports=e.p+"static/2.197d34d.png"},410:function(n,t,e){n.exports=e.p+"static/3.2077ef0.png"},411:function(n,t,e){n.exports=e.p+"static/4.1a44f4e.png"},412:function(n,t,e){n.exports=e.p+"static/5.5ee1ea0.png"},413:function(n,t,e){n.exports=e.p+"static/6.aa4fbb3.png"},414:function(n,t,e){n.exports=e.p+"static/7.7a417cb.png"},415:function(n,t,e){n.exports=e.p+"static/8.710dc19.png"}}]);